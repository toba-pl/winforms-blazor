"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=__importDefault(require(400)),utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const expressionEvaluator_1=require(180),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),returnType_1=require(213);class StartOfHour extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.StartOfHour,StartOfHour.evaluator,returnType_1.ReturnType.String,StartOfHour.validator)}static evaluator(expr,state,options){let value,locale=options.locale?options.locale:Intl.DateTimeFormat().resolvedOptions().locale,format=functionUtils_1.FunctionUtils.DefaultDateTimeFormat;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options);let error=childrenError;return error||(({format:format,locale:locale}=functionUtils_1.FunctionUtils.determineFormatAndLocale(args,3,format,locale)),"string"==typeof args[0]?({value:value,error:error}=StartOfHour.evalStartOfHour(args[0],format,locale)):error=`${expr} should contain an ISO format timestamp and an optional output format string.`),{value:value,error:error}}static evalStartOfHour(timeStamp,format,locale){let result;const error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(timeStamp);return error||(result=dayjs_1.default(timeStamp).locale(locale).utc().startOf("hour").format(format)),{value:result,error:error}}static validator(expr){functionUtils_1.FunctionUtils.validateOrder(expr,[returnType_1.ReturnType.String,returnType_1.ReturnType.String],returnType_1.ReturnType.String)}}exports.StartOfHour=StartOfHour;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0T2ZIb3VyLmpzIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsInRoaXMiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGF5anNfMSIsInJlcXVpcmUiLCJ1dGNfMSIsImV4dGVuZCIsImV4cHJlc3Npb25FdmFsdWF0b3JfMSIsImV4cHJlc3Npb25UeXBlXzEiLCJmdW5jdGlvblV0aWxzXzEiLCJmdW5jdGlvblV0aWxzX2ludGVybmFsXzEiLCJyZXR1cm5UeXBlXzEiLCJTdGFydE9mSG91ciIsIkV4cHJlc3Npb25FdmFsdWF0b3IiLCJbb2JqZWN0IE9iamVjdF0iLCJzdXBlciIsIkV4cHJlc3Npb25UeXBlIiwiZXZhbHVhdG9yIiwiUmV0dXJuVHlwZSIsIlN0cmluZyIsInZhbGlkYXRvciIsImV4cHIiLCJzdGF0ZSIsIm9wdGlvbnMiLCJsb2NhbGUiLCJJbnRsIiwiRGF0ZVRpbWVGb3JtYXQiLCJyZXNvbHZlZE9wdGlvbnMiLCJmb3JtYXQiLCJGdW5jdGlvblV0aWxzIiwiRGVmYXVsdERhdGVUaW1lRm9ybWF0IiwiYXJncyIsImVycm9yIiwiY2hpbGRyZW5FcnJvciIsImV2YWx1YXRlQ2hpbGRyZW4iLCJkZXRlcm1pbmVGb3JtYXRBbmRMb2NhbGUiLCJldmFsU3RhcnRPZkhvdXIiLCJ0aW1lU3RhbXAiLCJyZXN1bHQiLCJJbnRlcm5hbEZ1bmN0aW9uVXRpbHMiLCJ2ZXJpZnlJU09UaW1lc3RhbXAiLCJ1dGMiLCJzdGFydE9mIiwidmFsaWRhdGVPcmRlciJdLCJtYXBwaW5ncyI6IkFBQUEsYUFRQSxJQUFJQSxnQkFBbUJDLE1BQVFBLEtBQUtELGlCQUFvQixTQUFVRSxLQUM5RCxPQUFRQSxLQUFPQSxJQUFJQyxXQUFjRCxJQUFNLENBQUVFLFFBQVdGLE1BRXhERyxPQUFPQyxlQUFlQyxRQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNQyxRQUFVVCxnQkFBZ0JVLFFBQVEsVUFDbENDLE1BQVFYLGdCQUFnQlUsUUFBUSxxQkFDdENELFFBQVFMLFFBQVFRLE9BQU9ELE1BQU1QLFNBQzdCLE1BQU1TLHNCQUF3QkgsUUFBUSwwQkFDaENJLGlCQUFtQkosUUFBUSxxQkFDM0JLLGdCQUFrQkwsUUFBUSxvQkFDMUJNLHlCQUEyQk4sUUFBUSw2QkFDbkNPLGFBQWVQLFFBQVEsaUJBSTdCLE1BQU1RLG9CQUFvQkwsc0JBQXNCTSxvQkFJNUNDLGNBQ0lDLE1BQU1QLGlCQUFpQlEsZUFBZUosWUFBYUEsWUFBWUssVUFBV04sYUFBYU8sV0FBV0MsT0FBUVAsWUFBWVEsV0FLMUhOLGlCQUFpQk8sS0FBTUMsTUFBT0MsU0FDMUIsSUFBSXJCLE1BQ0FzQixPQUFTRCxRQUFRQyxPQUFTRCxRQUFRQyxPQUFTQyxLQUFLQyxpQkFBaUJDLGtCQUFrQkgsT0FDbkZJLE9BQVNuQixnQkFBZ0JvQixjQUFjQyxzQkFDM0MsTUFBTUMsS0FBRUEsS0FBTUMsTUFBT0MsZUFBa0J4QixnQkFBZ0JvQixjQUFjSyxpQkFBaUJiLEtBQU1DLE1BQU9DLFNBQ25HLElBQUlTLE1BQVFDLGNBVVosT0FUS0QsVUFDRUosT0FBQUEsT0FBUUosT0FBQUEsUUFBV2YsZ0JBQWdCb0IsY0FBY00seUJBQXlCSixLQUFNLEVBQUdILE9BQVFKLFNBQ3ZFLGlCQUFaTyxLQUFLLEtBQ1Q3QixNQUFBQSxNQUFPOEIsTUFBQUEsT0FBVXBCLFlBQVl3QixnQkFBZ0JMLEtBQUssR0FBSUgsT0FBUUosU0FHakVRLFNBQVdYLHFGQUdaLENBQUVuQixNQUFBQSxNQUFPOEIsTUFBQUEsT0FLcEJsQix1QkFBdUJ1QixVQUFXVCxPQUFRSixRQUN0QyxJQUFJYyxPQUNKLE1BQU1OLE1BQVF0Qix5QkFBeUI2QixzQkFBc0JDLG1CQUFtQkgsV0FJaEYsT0FIS0wsUUFDRE0sT0FBU25DLFFBQVFMLFFBQVF1QyxXQUFXYixPQUFPQSxRQUFRaUIsTUFBTUMsUUFBUSxRQUFRZCxPQUFPQSxTQUU3RSxDQUFFMUIsTUFBT29DLE9BQVFOLE1BQUFBLE9BSzVCbEIsaUJBQWlCTyxNQUNiWixnQkFBZ0JvQixjQUFjYyxjQUFjdEIsS0FBTSxDQUFDVixhQUFhTyxXQUFXQyxPQUFRUixhQUFhTyxXQUFXQyxRQUFTUixhQUFhTyxXQUFXQyxTQUdwSmxCLFFBQVFXLFlBQWNBIiwiZmlsZSI6Ii9ob21lL3ZzdHMvd29yay8xL3MvbGlicmFyaWVzL2FkYXB0aXZlLWV4cHJlc3Npb25zL2xpYi9idWlsdGluRnVuY3Rpb25zL3N0YXJ0T2ZIb3VyLmpzIn0=