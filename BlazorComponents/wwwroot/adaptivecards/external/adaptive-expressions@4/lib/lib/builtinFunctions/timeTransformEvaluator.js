"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=__importDefault(require(400)),utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const expressionEvaluator_1=require(180),functionUtils_1=require(196),functionUtils_internal_1=require(195),returnType_1=require(213);class TimeTransformEvaluator extends expressionEvaluator_1.ExpressionEvaluator{constructor(type,func){super(type,TimeTransformEvaluator.evaluator(func),returnType_1.ReturnType.String,TimeTransformEvaluator.validator)}static evaluator(func){return(expression,state,options)=>{let result,locale=options.locale?options.locale:Intl.DateTimeFormat().resolvedOptions().locale,format=functionUtils_1.FunctionUtils.DefaultDateTimeFormat;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options);let error=childrenError;return error||(({format:format,locale:locale}=functionUtils_1.FunctionUtils.determineFormatAndLocale(args,4,format,locale)),"string"==typeof args[0]&&functionUtils_1.FunctionUtils.isNumber(args[1])?(error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(args[0]))||(result=dayjs_1.default(func(new Date(args[0]),args[1])).locale(locale).utc().format(format)):error=`${expression} should contain an ISO format timestamp and a time interval integer.`),{value:result,error:error}}}static validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String,returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.Number)}}exports.TimeTransformEvaluator=TimeTransformEvaluator;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWVUcmFuc2Zvcm1FdmFsdWF0b3IuanMiXSwibmFtZXMiOlsiX19pbXBvcnREZWZhdWx0IiwidGhpcyIsIm1vZCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkYXlqc18xIiwicmVxdWlyZSIsInV0Y18xIiwiZXh0ZW5kIiwiZXhwcmVzc2lvbkV2YWx1YXRvcl8xIiwiZnVuY3Rpb25VdGlsc18xIiwiZnVuY3Rpb25VdGlsc19pbnRlcm5hbF8xIiwicmV0dXJuVHlwZV8xIiwiVGltZVRyYW5zZm9ybUV2YWx1YXRvciIsIkV4cHJlc3Npb25FdmFsdWF0b3IiLCJbb2JqZWN0IE9iamVjdF0iLCJ0eXBlIiwiZnVuYyIsInN1cGVyIiwiZXZhbHVhdG9yIiwiUmV0dXJuVHlwZSIsIlN0cmluZyIsInZhbGlkYXRvciIsImV4cHJlc3Npb24iLCJzdGF0ZSIsIm9wdGlvbnMiLCJyZXN1bHQiLCJsb2NhbGUiLCJJbnRsIiwiRGF0ZVRpbWVGb3JtYXQiLCJyZXNvbHZlZE9wdGlvbnMiLCJmb3JtYXQiLCJGdW5jdGlvblV0aWxzIiwiRGVmYXVsdERhdGVUaW1lRm9ybWF0IiwiYXJncyIsImVycm9yIiwiY2hpbGRyZW5FcnJvciIsImV2YWx1YXRlQ2hpbGRyZW4iLCJkZXRlcm1pbmVGb3JtYXRBbmRMb2NhbGUiLCJpc051bWJlciIsIkludGVybmFsRnVuY3Rpb25VdGlscyIsInZlcmlmeUlTT1RpbWVzdGFtcCIsIkRhdGUiLCJ1dGMiLCJ2YWxpZGF0ZU9yZGVyIiwiTnVtYmVyIl0sIm1hcHBpbmdzIjoiQUFBQSxhQVFBLElBQUlBLGdCQUFtQkMsTUFBUUEsS0FBS0QsaUJBQW9CLFNBQVVFLEtBQzlELE9BQVFBLEtBQU9BLElBQUlDLFdBQWNELElBQU0sQ0FBRUUsUUFBV0YsTUFFeERHLE9BQU9DLGVBQWVDLFFBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RELE1BQU1DLFFBQVVULGdCQUFnQlUsUUFBUSxVQUNsQ0MsTUFBUVgsZ0JBQWdCVSxRQUFRLHFCQUN0Q0QsUUFBUUwsUUFBUVEsT0FBT0QsTUFBTVAsU0FDN0IsTUFBTVMsc0JBQXdCSCxRQUFRLDBCQUNoQ0ksZ0JBQWtCSixRQUFRLG9CQUMxQksseUJBQTJCTCxRQUFRLDZCQUNuQ00sYUFBZU4sUUFBUSxpQkFJN0IsTUFBTU8sK0JBQStCSixzQkFBc0JLLG9CQU12REMsWUFBWUMsS0FBTUMsTUFDZEMsTUFBTUYsS0FBTUgsdUJBQXVCTSxVQUFVRixNQUFPTCxhQUFhUSxXQUFXQyxPQUFRUix1QkFBdUJTLFdBSy9HUCxpQkFBaUJFLE1BQ2IsTUFBTyxDQUFDTSxXQUFZQyxNQUFPQyxXQUN2QixJQUFJQyxPQUNBQyxPQUFTRixRQUFRRSxPQUFTRixRQUFRRSxPQUFTQyxLQUFLQyxpQkFBaUJDLGtCQUFrQkgsT0FDbkZJLE9BQVNyQixnQkFBZ0JzQixjQUFjQyxzQkFDM0MsTUFBTUMsS0FBRUEsS0FBTUMsTUFBT0MsZUFBa0IxQixnQkFBZ0JzQixjQUFjSyxpQkFBaUJkLFdBQVlDLE1BQU9DLFNBQ3pHLElBQUlVLE1BQVFDLGNBZ0JaLE9BZktELFVBQ0VKLE9BQUFBLE9BQVFKLE9BQUFBLFFBQVdqQixnQkFBZ0JzQixjQUFjTSx5QkFBeUJKLEtBQU0sRUFBR0gsT0FBUUosU0FDdkUsaUJBQVpPLEtBQUssSUFBbUJ4QixnQkFBZ0JzQixjQUFjTyxTQUFTTCxLQUFLLEtBQzNFQyxNQUFReEIseUJBQXlCNkIsc0JBQXNCQyxtQkFBbUJQLEtBQUssT0FFM0VSLE9BQVNyQixRQUFRTCxRQUFRaUIsS0FBSyxJQUFJeUIsS0FBS1IsS0FBSyxJQUFLQSxLQUFLLEtBQ2pEUCxPQUFPQSxRQUNQZ0IsTUFDQVosT0FBT0EsU0FJaEJJLFNBQVdaLGtGQUdaLENBQUVuQixNQUFPc0IsT0FBUVMsTUFBQUEsUUFNaENwQixpQkFBaUJRLFlBQ2JiLGdCQUFnQnNCLGNBQWNZLGNBQWNyQixXQUFZLENBQUNYLGFBQWFRLFdBQVdDLE9BQVFULGFBQWFRLFdBQVdDLFFBQVNULGFBQWFRLFdBQVdDLE9BQVFULGFBQWFRLFdBQVd5QixTQUcxTDFDLFFBQVFVLHVCQUF5QkEiLCJmaWxlIjoiL2hvbWUvdnN0cy93b3JrLzEvcy9saWJyYXJpZXMvYWRhcHRpdmUtZXhwcmVzc2lvbnMvbGliL2J1aWx0aW5GdW5jdGlvbnMvdGltZVRyYW5zZm9ybUV2YWx1YXRvci5qcyJ9