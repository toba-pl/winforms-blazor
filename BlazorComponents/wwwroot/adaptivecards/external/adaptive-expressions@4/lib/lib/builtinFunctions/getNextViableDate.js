"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const expressionEvaluator_1=require(180),returnType_1=require(213),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),timeZoneConverter_1=require(214),dayjs_1=__importDefault(require(400)),utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const timezone_1=__importDefault(require(402));dayjs_1.default.extend(timezone_1.default);const recognizers_text_data_types_timex_expression_1=require(222);class GetNextViableDate extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.GetNextViableDate,GetNextViableDate.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString)}static evaluator(expr,state,options){let parsed;const currentTime=dayjs_1.default((new Date).toISOString());let convertedDateTime,validYear=0,validMonth=0,validDay=0;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options);let error=childrenError;if(error||({timexProperty:parsed,error:error}=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0])),parsed&&!error&&(!parsed.year&&parsed.month&&parsed.dayOfMonth||(error=`${args[0]} must be a timex string which only contains month and day-of-month, for example: 'XXXX-10-31'.`)),!error)if(2===args.length&&"string"==typeof args[1]){const timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)||(error=`${args[1]} is not a valid timezone`),error||(convertedDateTime=currentTime.utc().tz(timeZone))}else convertedDateTime=currentTime.utc();if(!error){const year=convertedDateTime.year(),month=convertedDateTime.month()+1,dayOfMonth=convertedDateTime.date();if(validYear=parsed.month>month||parsed.month===month&&parsed.dayOfMonth>=dayOfMonth?year:year+1,validMonth=parsed.month,validDay=parsed.dayOfMonth,2===validMonth&&29===validDay)for(;!GetNextViableDate.leapYear(validYear);)validYear+=1}return{value:recognizers_text_data_types_timex_expression_1.TimexProperty.fromDate(new Date(validYear,validMonth-1,validDay)).timex,error:error}}static leapYear(year){return year%4==0&&year%100!=0||year%400==0}}exports.GetNextViableDate=GetNextViableDate;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldE5leHRWaWFibGVEYXRlLmpzIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsInRoaXMiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXhwcmVzc2lvbkV2YWx1YXRvcl8xIiwicmVxdWlyZSIsInJldHVyblR5cGVfMSIsImV4cHJlc3Npb25UeXBlXzEiLCJmdW5jdGlvblV0aWxzXzEiLCJmdW5jdGlvblV0aWxzX2ludGVybmFsXzEiLCJ0aW1lWm9uZUNvbnZlcnRlcl8xIiwiZGF5anNfMSIsInV0Y18xIiwiZXh0ZW5kIiwidGltZXpvbmVfMSIsInJlY29nbml6ZXJzX3RleHRfZGF0YV90eXBlc190aW1leF9leHByZXNzaW9uXzEiLCJHZXROZXh0VmlhYmxlRGF0ZSIsIkV4cHJlc3Npb25FdmFsdWF0b3IiLCJbb2JqZWN0IE9iamVjdF0iLCJzdXBlciIsIkV4cHJlc3Npb25UeXBlIiwiZXZhbHVhdG9yIiwiUmV0dXJuVHlwZSIsIlN0cmluZyIsIkZ1bmN0aW9uVXRpbHMiLCJ2YWxpZGF0ZVVuYXJ5T3JCaW5hcnlTdHJpbmciLCJleHByIiwic3RhdGUiLCJvcHRpb25zIiwicGFyc2VkIiwiY3VycmVudFRpbWUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjb252ZXJ0ZWREYXRlVGltZSIsInZhbGlkWWVhciIsInZhbGlkTW9udGgiLCJ2YWxpZERheSIsImFyZ3MiLCJlcnJvciIsImNoaWxkcmVuRXJyb3IiLCJldmFsdWF0ZUNoaWxkcmVuIiwidGltZXhQcm9wZXJ0eSIsIkludGVybmFsRnVuY3Rpb25VdGlscyIsInBhcnNlVGltZXhQcm9wZXJ0eSIsInllYXIiLCJtb250aCIsImRheU9mTW9udGgiLCJsZW5ndGgiLCJ0aW1lWm9uZSIsIlRpbWVab25lQ29udmVydGVyIiwid2luZG93c1RvSWFuYSIsInZlcmlmeVRpbWVab25lU3RyIiwidXRjIiwidHoiLCJkYXRlIiwibGVhcFllYXIiLCJUaW1leFByb3BlcnR5IiwiZnJvbURhdGUiLCJ0aW1leCJdLCJtYXBwaW5ncyI6IkFBQUEsYUFRQSxJQUFJQSxnQkFBbUJDLE1BQVFBLEtBQUtELGlCQUFvQixTQUFVRSxLQUM5RCxPQUFRQSxLQUFPQSxJQUFJQyxXQUFjRCxJQUFNLENBQUVFLFFBQVdGLE1BRXhERyxPQUFPQyxlQUFlQyxRQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNQyxzQkFBd0JDLFFBQVEsMEJBQ2hDQyxhQUFlRCxRQUFRLGlCQUN2QkUsaUJBQW1CRixRQUFRLHFCQUMzQkcsZ0JBQWtCSCxRQUFRLG9CQUMxQkkseUJBQTJCSixRQUFRLDZCQUNuQ0ssb0JBQXNCTCxRQUFRLHdCQUM5Qk0sUUFBVWhCLGdCQUFnQlUsUUFBUSxVQUNsQ08sTUFBUWpCLGdCQUFnQlUsUUFBUSxxQkFDdENNLFFBQVFaLFFBQVFjLE9BQU9ELE1BQU1iLFNBQzdCLE1BQU1lLFdBQWFuQixnQkFBZ0JVLFFBQVEsMEJBQzNDTSxRQUFRWixRQUFRYyxPQUFPQyxXQUFXZixTQUNsQyxNQUFNZ0IsK0NBQWlEVixRQUFRLDJEQUkvRCxNQUFNVywwQkFBMEJaLHNCQUFzQmEsb0JBSWxEQyxjQUNJQyxNQUFNWixpQkFBaUJhLGVBQWVKLGtCQUFtQkEsa0JBQWtCSyxVQUFXZixhQUFhZ0IsV0FBV0MsT0FBUWYsZ0JBQWdCZ0IsY0FBY0MsNkJBS3hKUCxpQkFBaUJRLEtBQU1DLE1BQU9DLFNBQzFCLElBQUlDLE9BQ0osTUFBTUMsWUFBY25CLFFBQVFaLFNBQVEsSUFBSWdDLE1BQU9DLGVBQy9DLElBR0lDLGtCQUhBQyxVQUFZLEVBQ1pDLFdBQWEsRUFDYkMsU0FBVyxFQUVmLE1BQU1DLEtBQUVBLEtBQU1DLE1BQU9DLGVBQWtCL0IsZ0JBQWdCZ0IsY0FBY2dCLGlCQUFpQmQsS0FBTUMsTUFBT0MsU0FDbkcsSUFBSVUsTUFBUUMsY0FTWixHQVJLRCxTQUNFRyxjQUFlWixPQUFRUyxNQUFPQSxPQUFVN0IseUJBQXlCaUMsc0JBQXNCQyxtQkFBbUJOLEtBQUssS0FFbEhSLFNBQVdTLFNBQ1BULE9BQU9lLE1BQVNmLE9BQU9nQixPQUFVaEIsT0FBT2lCLGFBQ3hDUixTQUFXRCxLQUFLLHNHQUduQkMsTUFDRCxHQUFvQixJQUFoQkQsS0FBS1UsUUFBbUMsaUJBQVpWLEtBQUssR0FBaUIsQ0FDbEQsTUFBTVcsU0FBV3RDLG9CQUFvQnVDLGtCQUFrQkMsY0FBY2IsS0FBSyxJQUNyRTNCLG9CQUFvQnVDLGtCQUFrQkUsa0JBQWtCSCxZQUN6RFYsU0FBV0QsS0FBSyw4QkFFZkMsUUFDREwsa0JBQW9CSCxZQUFZc0IsTUFBTUMsR0FBR0wsZ0JBSTdDZixrQkFBb0JILFlBQVlzQixNQUd4QyxJQUFLZCxNQUFPLENBQ1IsTUFBTU0sS0FBT1gsa0JBQWtCVyxPQUN6QkMsTUFBUVosa0JBQWtCWSxRQUFVLEVBQ3BDQyxXQUFhYixrQkFBa0JxQixPQVNyQyxHQVBJcEIsVUFEQUwsT0FBT2dCLE1BQVFBLE9BQVVoQixPQUFPZ0IsUUFBVUEsT0FBU2hCLE9BQU9pQixZQUFjQSxXQUM1REYsS0FHQUEsS0FBTyxFQUV2QlQsV0FBYU4sT0FBT2dCLE1BQ3BCVCxTQUFXUCxPQUFPaUIsV0FDQyxJQUFmWCxZQUFpQyxLQUFiQyxTQUNwQixNQUFRcEIsa0JBQWtCdUMsU0FBU3JCLFlBQy9CQSxXQUFhLEVBS3pCLE1BQU8sQ0FBRS9CLE1BREtZLCtDQUErQ3lDLGNBQWNDLFNBQVMsSUFBSTFCLEtBQUtHLFVBQVdDLFdBQWEsRUFBR0MsV0FBV3NCLE1BQ25IcEIsTUFBQUEsT0FLcEJwQixnQkFBZ0IwQixNQUNaLE9BQVFBLEtBQU8sR0FBTSxHQUFLQSxLQUFPLEtBQU8sR0FBTUEsS0FBTyxLQUFRLEdBR3JFMUMsUUFBUWMsa0JBQW9CQSIsImZpbGUiOiIvaG9tZS92c3RzL3dvcmsvMS9zL2xpYnJhcmllcy9hZGFwdGl2ZS1leHByZXNzaW9ucy9saWIvYnVpbHRpbkZ1bmN0aW9ucy9nZXROZXh0VmlhYmxlRGF0ZS5qcyJ9