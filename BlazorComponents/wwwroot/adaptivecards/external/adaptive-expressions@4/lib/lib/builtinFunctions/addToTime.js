"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=__importDefault(require(400)),utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const expressionEvaluator_1=require(180),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),returnType_1=require(213);class AddToTime extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.AddToTime,AddToTime.evaluator,returnType_1.ReturnType.String,AddToTime.validator)}static evaluator(expression,state,options){let value,locale=options.locale?options.locale:Intl.DateTimeFormat().resolvedOptions().locale,format=functionUtils_1.FunctionUtils.DefaultDateTimeFormat;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options);let error=childrenError;return error||(({format:format,locale:locale}=functionUtils_1.FunctionUtils.determineFormatAndLocale(args,5,format,locale)),"string"==typeof args[0]&&Number.isInteger(args[1])&&"string"==typeof args[2]?({value:value,error:error}=AddToTime.evalAddToTime(args[0],args[1],args[2],format,locale)):error=`${expression} should contain an ISO format timestamp, a time interval integer, a string unit of time and an optional output format string.`),{value:value,error:error}}static evalAddToTime(timeStamp,interval,timeUnit,format,locale){let result;const error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(timeStamp);if(!error){const{duration:duration,tsStr:tsStr}=functionUtils_internal_1.InternalFunctionUtils.timeUnitTransformer(interval,timeUnit);result=dayjs_1.default(timeStamp).locale(locale).utc().add(duration,tsStr).format(format)}return{value:result,error:error}}static validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String,returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.Number,returnType_1.ReturnType.String)}}exports.AddToTime=AddToTime;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFRvVGltZS5qcyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJ0aGlzIiwibW9kIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRheWpzXzEiLCJyZXF1aXJlIiwidXRjXzEiLCJleHRlbmQiLCJleHByZXNzaW9uRXZhbHVhdG9yXzEiLCJleHByZXNzaW9uVHlwZV8xIiwiZnVuY3Rpb25VdGlsc18xIiwiZnVuY3Rpb25VdGlsc19pbnRlcm5hbF8xIiwicmV0dXJuVHlwZV8xIiwiQWRkVG9UaW1lIiwiRXhwcmVzc2lvbkV2YWx1YXRvciIsIltvYmplY3QgT2JqZWN0XSIsInN1cGVyIiwiRXhwcmVzc2lvblR5cGUiLCJldmFsdWF0b3IiLCJSZXR1cm5UeXBlIiwiU3RyaW5nIiwidmFsaWRhdG9yIiwiZXhwcmVzc2lvbiIsInN0YXRlIiwib3B0aW9ucyIsImxvY2FsZSIsIkludGwiLCJEYXRlVGltZUZvcm1hdCIsInJlc29sdmVkT3B0aW9ucyIsImZvcm1hdCIsIkZ1bmN0aW9uVXRpbHMiLCJEZWZhdWx0RGF0ZVRpbWVGb3JtYXQiLCJhcmdzIiwiZXJyb3IiLCJjaGlsZHJlbkVycm9yIiwiZXZhbHVhdGVDaGlsZHJlbiIsImRldGVybWluZUZvcm1hdEFuZExvY2FsZSIsIk51bWJlciIsImlzSW50ZWdlciIsImV2YWxBZGRUb1RpbWUiLCJ0aW1lU3RhbXAiLCJpbnRlcnZhbCIsInRpbWVVbml0IiwicmVzdWx0IiwiSW50ZXJuYWxGdW5jdGlvblV0aWxzIiwidmVyaWZ5SVNPVGltZXN0YW1wIiwiZHVyYXRpb24iLCJ0c1N0ciIsInRpbWVVbml0VHJhbnNmb3JtZXIiLCJ1dGMiLCJhZGQiLCJ2YWxpZGF0ZU9yZGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxhQVFBLElBQUlBLGdCQUFtQkMsTUFBUUEsS0FBS0QsaUJBQW9CLFNBQVVFLEtBQzlELE9BQVFBLEtBQU9BLElBQUlDLFdBQWNELElBQU0sQ0FBRUUsUUFBV0YsTUFFeERHLE9BQU9DLGVBQWVDLFFBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RELE1BQU1DLFFBQVVULGdCQUFnQlUsUUFBUSxVQUNsQ0MsTUFBUVgsZ0JBQWdCVSxRQUFRLHFCQUN0Q0QsUUFBUUwsUUFBUVEsT0FBT0QsTUFBTVAsU0FDN0IsTUFBTVMsc0JBQXdCSCxRQUFRLDBCQUNoQ0ksaUJBQW1CSixRQUFRLHFCQUMzQkssZ0JBQWtCTCxRQUFRLG9CQUMxQk0seUJBQTJCTixRQUFRLDZCQUNuQ08sYUFBZVAsUUFBUSxpQkFJN0IsTUFBTVEsa0JBQWtCTCxzQkFBc0JNLG9CQUkxQ0MsY0FDSUMsTUFBTVAsaUJBQWlCUSxlQUFlSixVQUFXQSxVQUFVSyxVQUFXTixhQUFhTyxXQUFXQyxPQUFRUCxVQUFVUSxXQUtwSE4saUJBQWlCTyxXQUFZQyxNQUFPQyxTQUNoQyxJQUFJckIsTUFDQXNCLE9BQVNELFFBQVFDLE9BQVNELFFBQVFDLE9BQVNDLEtBQUtDLGlCQUFpQkMsa0JBQWtCSCxPQUNuRkksT0FBU25CLGdCQUFnQm9CLGNBQWNDLHNCQUMzQyxNQUFNQyxLQUFFQSxLQUFNQyxNQUFPQyxlQUFrQnhCLGdCQUFnQm9CLGNBQWNLLGlCQUFpQmIsV0FBWUMsTUFBT0MsU0FDekcsSUFBSVMsTUFBUUMsY0FVWixPQVRLRCxVQUNFSixPQUFBQSxPQUFRSixPQUFBQSxRQUFXZixnQkFBZ0JvQixjQUFjTSx5QkFBeUJKLEtBQU0sRUFBR0gsT0FBUUosU0FDdkUsaUJBQVpPLEtBQUssSUFBbUJLLE9BQU9DLFVBQVVOLEtBQUssS0FBMEIsaUJBQVpBLEtBQUssS0FDckU3QixNQUFBQSxNQUFPOEIsTUFBQUEsT0FBVXBCLFVBQVUwQixjQUFjUCxLQUFLLEdBQUlBLEtBQUssR0FBSUEsS0FBSyxHQUFJSCxPQUFRSixTQUcvRVEsU0FBV1gsMklBR1osQ0FBRW5CLE1BQUFBLE1BQU84QixNQUFBQSxPQUtwQmxCLHFCQUFxQnlCLFVBQVdDLFNBQVVDLFNBQVViLE9BQVFKLFFBQ3hELElBQUlrQixPQUNKLE1BQU1WLE1BQVF0Qix5QkFBeUJpQyxzQkFBc0JDLG1CQUFtQkwsV0FDaEYsSUFBS1AsTUFBTyxDQUNSLE1BQU1hLFNBQUVBLFNBQVFDLE1BQUVBLE9BQVVwQyx5QkFBeUJpQyxzQkFBc0JJLG9CQUFvQlAsU0FBVUMsVUFDekdDLE9BQVN2QyxRQUFRTCxRQUFReUMsV0FBV2YsT0FBT0EsUUFBUXdCLE1BQU1DLElBQUlKLFNBQVVDLE9BQU9sQixPQUFPQSxRQUV6RixNQUFPLENBQUUxQixNQUFPd0MsT0FBUVYsTUFBQUEsT0FLNUJsQixpQkFBaUJPLFlBQ2JaLGdCQUFnQm9CLGNBQWNxQixjQUFjN0IsV0FBWSxDQUFDVixhQUFhTyxXQUFXQyxPQUFRUixhQUFhTyxXQUFXQyxRQUFTUixhQUFhTyxXQUFXQyxPQUFRUixhQUFhTyxXQUFXa0IsT0FBUXpCLGFBQWFPLFdBQVdDLFNBRzFObEIsUUFBUVcsVUFBWUEiLCJmaWxlIjoiL2hvbWUvdnN0cy93b3JrLzEvcy9saWJyYXJpZXMvYWRhcHRpdmUtZXhwcmVzc2lvbnMvbGliL2J1aWx0aW5GdW5jdGlvbnMvYWRkVG9UaW1lLmpzIn0=