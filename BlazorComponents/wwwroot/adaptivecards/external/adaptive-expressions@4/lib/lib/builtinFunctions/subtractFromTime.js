"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=__importDefault(require(400)),utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const expressionEvaluator_1=require(180),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),returnType_1=require(213);class SubtractFromTime extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.SubtractFromTime,SubtractFromTime.evaluator,returnType_1.ReturnType.String,SubtractFromTime.validator)}static evaluator(expression,state,options){let value,locale=options.locale?options.locale:Intl.DateTimeFormat().resolvedOptions().locale,format=functionUtils_1.FunctionUtils.DefaultDateTimeFormat;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options);let error=childrenError;if(!error)if("string"==typeof args[0]&&Number.isInteger(args[1])&&"string"==typeof args[2]){({format:format,locale:locale}=functionUtils_1.FunctionUtils.determineFormatAndLocale(args,5,format,locale));const{duration:duration,tsStr:tsStr}=functionUtils_internal_1.InternalFunctionUtils.timeUnitTransformer(args[1],args[2]);if(void 0===tsStr)error=`${args[2]} is not a valid time unit.`;else{const dur=duration;(error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(args[0]))||(value=dayjs_1.default(args[0]).locale(locale).utc().subtract(dur,tsStr).format(format))}}else error=`${expression} should contain an ISO format timestamp, a time interval integer, a string unit of time and an optional output format string.`;return{value:value,error:error}}static validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String,returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.Number,returnType_1.ReturnType.String)}}exports.SubtractFromTime=SubtractFromTime;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1YnRyYWN0RnJvbVRpbWUuanMiXSwibmFtZXMiOlsiX19pbXBvcnREZWZhdWx0IiwidGhpcyIsIm1vZCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkYXlqc18xIiwicmVxdWlyZSIsInV0Y18xIiwiZXh0ZW5kIiwiZXhwcmVzc2lvbkV2YWx1YXRvcl8xIiwiZXhwcmVzc2lvblR5cGVfMSIsImZ1bmN0aW9uVXRpbHNfMSIsImZ1bmN0aW9uVXRpbHNfaW50ZXJuYWxfMSIsInJldHVyblR5cGVfMSIsIlN1YnRyYWN0RnJvbVRpbWUiLCJFeHByZXNzaW9uRXZhbHVhdG9yIiwiW29iamVjdCBPYmplY3RdIiwic3VwZXIiLCJFeHByZXNzaW9uVHlwZSIsImV2YWx1YXRvciIsIlJldHVyblR5cGUiLCJTdHJpbmciLCJ2YWxpZGF0b3IiLCJleHByZXNzaW9uIiwic3RhdGUiLCJvcHRpb25zIiwibG9jYWxlIiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwicmVzb2x2ZWRPcHRpb25zIiwiZm9ybWF0IiwiRnVuY3Rpb25VdGlscyIsIkRlZmF1bHREYXRlVGltZUZvcm1hdCIsImFyZ3MiLCJlcnJvciIsImNoaWxkcmVuRXJyb3IiLCJldmFsdWF0ZUNoaWxkcmVuIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwiZGV0ZXJtaW5lRm9ybWF0QW5kTG9jYWxlIiwiZHVyYXRpb24iLCJ0c1N0ciIsIkludGVybmFsRnVuY3Rpb25VdGlscyIsInRpbWVVbml0VHJhbnNmb3JtZXIiLCJ1bmRlZmluZWQiLCJkdXIiLCJ2ZXJpZnlJU09UaW1lc3RhbXAiLCJ1dGMiLCJzdWJ0cmFjdCIsInZhbGlkYXRlT3JkZXIiXSwibWFwcGluZ3MiOiJBQUFBLGFBUUEsSUFBSUEsZ0JBQW1CQyxNQUFRQSxLQUFLRCxpQkFBb0IsU0FBVUUsS0FDOUQsT0FBUUEsS0FBT0EsSUFBSUMsV0FBY0QsSUFBTSxDQUFFRSxRQUFXRixNQUV4REcsT0FBT0MsZUFBZUMsUUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdEQsTUFBTUMsUUFBVVQsZ0JBQWdCVSxRQUFRLFVBQ2xDQyxNQUFRWCxnQkFBZ0JVLFFBQVEscUJBQ3RDRCxRQUFRTCxRQUFRUSxPQUFPRCxNQUFNUCxTQUM3QixNQUFNUyxzQkFBd0JILFFBQVEsMEJBQ2hDSSxpQkFBbUJKLFFBQVEscUJBQzNCSyxnQkFBa0JMLFFBQVEsb0JBQzFCTSx5QkFBMkJOLFFBQVEsNkJBQ25DTyxhQUFlUCxRQUFRLGlCQUk3QixNQUFNUSx5QkFBeUJMLHNCQUFzQk0sb0JBSWpEQyxjQUNJQyxNQUFNUCxpQkFBaUJRLGVBQWVKLGlCQUFrQkEsaUJBQWlCSyxVQUFXTixhQUFhTyxXQUFXQyxPQUFRUCxpQkFBaUJRLFdBS3pJTixpQkFBaUJPLFdBQVlDLE1BQU9DLFNBQ2hDLElBQUlyQixNQUNBc0IsT0FBU0QsUUFBUUMsT0FBU0QsUUFBUUMsT0FBU0MsS0FBS0MsaUJBQWlCQyxrQkFBa0JILE9BQ25GSSxPQUFTbkIsZ0JBQWdCb0IsY0FBY0Msc0JBQzNDLE1BQU1DLEtBQUVBLEtBQU1DLE1BQU9DLGVBQWtCeEIsZ0JBQWdCb0IsY0FBY0ssaUJBQWlCYixXQUFZQyxNQUFPQyxTQUN6RyxJQUFJUyxNQUFRQyxjQUNaLElBQUtELE1BQ0QsR0FBdUIsaUJBQVpELEtBQUssSUFBbUJJLE9BQU9DLFVBQVVMLEtBQUssS0FBMEIsaUJBQVpBLEtBQUssR0FBaUIsR0FDdEZILE9BQUFBLE9BQVFKLE9BQUFBLFFBQVdmLGdCQUFnQm9CLGNBQWNRLHlCQUF5Qk4sS0FBTSxFQUFHSCxPQUFRSixTQUM5RixNQUFNYyxTQUFFQSxTQUFRQyxNQUFFQSxPQUFVN0IseUJBQXlCOEIsc0JBQXNCQyxvQkFBb0JWLEtBQUssR0FBSUEsS0FBSyxJQUM3RyxRQUFjVyxJQUFWSCxNQUNBUCxTQUFXRCxLQUFLLG1DQUVmLENBQ0QsTUFBTVksSUFBTUwsVUFDWk4sTUFBUXRCLHlCQUF5QjhCLHNCQUFzQkksbUJBQW1CYixLQUFLLE9BRTNFN0IsTUFBUUMsUUFBUUwsUUFBUWlDLEtBQUssSUFBSVAsT0FBT0EsUUFBUXFCLE1BQU1DLFNBQVNILElBQUtKLE9BQU9YLE9BQU9BLGVBSzFGSSxTQUFXWCwwSUFHbkIsTUFBTyxDQUFFbkIsTUFBQUEsTUFBTzhCLE1BQUFBLE9BS3BCbEIsaUJBQWlCTyxZQUNiWixnQkFBZ0JvQixjQUFja0IsY0FBYzFCLFdBQVksQ0FBQ1YsYUFBYU8sV0FBV0MsT0FBUVIsYUFBYU8sV0FBV0MsUUFBU1IsYUFBYU8sV0FBV0MsT0FBUVIsYUFBYU8sV0FBV2lCLE9BQVF4QixhQUFhTyxXQUFXQyxTQUcxTmxCLFFBQVFXLGlCQUFtQkEiLCJmaWxlIjoiL2hvbWUvdnN0cy93b3JrLzEvcy9saWJyYXJpZXMvYWRhcHRpdmUtZXhwcmVzc2lvbnMvbGliL2J1aWx0aW5GdW5jdGlvbnMvc3VidHJhY3RGcm9tVGltZS5qcyJ9