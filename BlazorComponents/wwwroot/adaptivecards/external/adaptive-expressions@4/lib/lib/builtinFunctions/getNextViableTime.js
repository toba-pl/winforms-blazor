"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const expressionEvaluator_1=require(180),returnType_1=require(213),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),timeZoneConverter_1=require(214),dayjs_1=__importDefault(require(400)),utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const timezone_1=__importDefault(require(402));dayjs_1.default.extend(timezone_1.default);const recognizers_text_data_types_timex_expression_1=require(222);class GetNextViableTime extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.GetNextViableTime,GetNextViableTime.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString)}static evaluator(expr,state,options){let parsed;const currentTime=dayjs_1.default((new Date).toISOString());let convertedDateTime,validHour=0,validMinute=0,validSecond=0;const formatRegex=/TXX:[0-5][0-9]:[0-5][0-9]/g,{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options);let error=childrenError;if(error||formatRegex.test(args[0])||(error=`${args[0]}  must be a timex string which only contains minutes and seconds, for example: 'TXX:15:28'`),!error)if(2===args.length&&"string"==typeof args[1]){const timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)||(error=`${args[1]} is not a valid timezone`),error||(convertedDateTime=currentTime.utc().tz(timeZone))}else convertedDateTime=currentTime.utc();if(error||({timexProperty:parsed,error:error}=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0].replace("XX","00"))),!error){const hour=convertedDateTime.hour(),minute=convertedDateTime.minute(),second=convertedDateTime.second();(validHour=parsed.minute>minute||parsed.minute===minute&&parsed.second>=second?hour:hour+1)>=24&&(validHour-=24),validMinute=parsed.minute,validSecond=parsed.second}return{value:recognizers_text_data_types_timex_expression_1.TimexProperty.fromTime(new recognizers_text_data_types_timex_expression_1.Time(validHour,validMinute,validSecond)).timex,error:error}}}exports.GetNextViableTime=GetNextViableTime;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldE5leHRWaWFibGVUaW1lLmpzIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsInRoaXMiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXhwcmVzc2lvbkV2YWx1YXRvcl8xIiwicmVxdWlyZSIsInJldHVyblR5cGVfMSIsImV4cHJlc3Npb25UeXBlXzEiLCJmdW5jdGlvblV0aWxzXzEiLCJmdW5jdGlvblV0aWxzX2ludGVybmFsXzEiLCJ0aW1lWm9uZUNvbnZlcnRlcl8xIiwiZGF5anNfMSIsInV0Y18xIiwiZXh0ZW5kIiwidGltZXpvbmVfMSIsInJlY29nbml6ZXJzX3RleHRfZGF0YV90eXBlc190aW1leF9leHByZXNzaW9uXzEiLCJHZXROZXh0VmlhYmxlVGltZSIsIkV4cHJlc3Npb25FdmFsdWF0b3IiLCJbb2JqZWN0IE9iamVjdF0iLCJzdXBlciIsIkV4cHJlc3Npb25UeXBlIiwiZXZhbHVhdG9yIiwiUmV0dXJuVHlwZSIsIlN0cmluZyIsIkZ1bmN0aW9uVXRpbHMiLCJ2YWxpZGF0ZVVuYXJ5T3JCaW5hcnlTdHJpbmciLCJleHByIiwic3RhdGUiLCJvcHRpb25zIiwicGFyc2VkIiwiY3VycmVudFRpbWUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjb252ZXJ0ZWREYXRlVGltZSIsInZhbGlkSG91ciIsInZhbGlkTWludXRlIiwidmFsaWRTZWNvbmQiLCJmb3JtYXRSZWdleCIsImFyZ3MiLCJlcnJvciIsImNoaWxkcmVuRXJyb3IiLCJldmFsdWF0ZUNoaWxkcmVuIiwidGVzdCIsImxlbmd0aCIsInRpbWVab25lIiwiVGltZVpvbmVDb252ZXJ0ZXIiLCJ3aW5kb3dzVG9JYW5hIiwidmVyaWZ5VGltZVpvbmVTdHIiLCJ1dGMiLCJ0eiIsInRpbWV4UHJvcGVydHkiLCJJbnRlcm5hbEZ1bmN0aW9uVXRpbHMiLCJwYXJzZVRpbWV4UHJvcGVydHkiLCJyZXBsYWNlIiwiaG91ciIsIm1pbnV0ZSIsInNlY29uZCIsIlRpbWV4UHJvcGVydHkiLCJmcm9tVGltZSIsIlRpbWUiLCJ0aW1leCJdLCJtYXBwaW5ncyI6IkFBQUEsYUFRQSxJQUFJQSxnQkFBbUJDLE1BQVFBLEtBQUtELGlCQUFvQixTQUFVRSxLQUM5RCxPQUFRQSxLQUFPQSxJQUFJQyxXQUFjRCxJQUFNLENBQUVFLFFBQVdGLE1BRXhERyxPQUFPQyxlQUFlQyxRQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNQyxzQkFBd0JDLFFBQVEsMEJBQ2hDQyxhQUFlRCxRQUFRLGlCQUN2QkUsaUJBQW1CRixRQUFRLHFCQUMzQkcsZ0JBQWtCSCxRQUFRLG9CQUMxQkkseUJBQTJCSixRQUFRLDZCQUNuQ0ssb0JBQXNCTCxRQUFRLHdCQUM5Qk0sUUFBVWhCLGdCQUFnQlUsUUFBUSxVQUNsQ08sTUFBUWpCLGdCQUFnQlUsUUFBUSxxQkFDdENNLFFBQVFaLFFBQVFjLE9BQU9ELE1BQU1iLFNBQzdCLE1BQU1lLFdBQWFuQixnQkFBZ0JVLFFBQVEsMEJBQzNDTSxRQUFRWixRQUFRYyxPQUFPQyxXQUFXZixTQUNsQyxNQUFNZ0IsK0NBQWlEVixRQUFRLDJEQUkvRCxNQUFNVywwQkFBMEJaLHNCQUFzQmEsb0JBSWxEQyxjQUNJQyxNQUFNWixpQkFBaUJhLGVBQWVKLGtCQUFtQkEsa0JBQWtCSyxVQUFXZixhQUFhZ0IsV0FBV0MsT0FBUWYsZ0JBQWdCZ0IsY0FBY0MsNkJBS3hKUCxpQkFBaUJRLEtBQU1DLE1BQU9DLFNBQzFCLElBQUlDLE9BQ0osTUFBTUMsWUFBY25CLFFBQVFaLFNBQVEsSUFBSWdDLE1BQU9DLGVBQy9DLElBR0lDLGtCQUhBQyxVQUFZLEVBQ1pDLFlBQWMsRUFDZEMsWUFBYyxFQUVsQixNQUFNQyxZQUFjLDhCQUNkQyxLQUFFQSxLQUFNQyxNQUFPQyxlQUFrQmhDLGdCQUFnQmdCLGNBQWNpQixpQkFBaUJmLEtBQU1DLE1BQU9DLFNBQ25HLElBQUlXLE1BQVFDLGNBTVosR0FMS0QsT0FDSUYsWUFBWUssS0FBS0osS0FBSyxNQUN2QkMsU0FBV0QsS0FBSyxpR0FHbkJDLE1BQ0QsR0FBb0IsSUFBaEJELEtBQUtLLFFBQW1DLGlCQUFaTCxLQUFLLEdBQWlCLENBQ2xELE1BQU1NLFNBQVdsQyxvQkFBb0JtQyxrQkFBa0JDLGNBQWNSLEtBQUssSUFDckU1QixvQkFBb0JtQyxrQkFBa0JFLGtCQUFrQkgsWUFDekRMLFNBQVdELEtBQUssOEJBRWZDLFFBQ0ROLGtCQUFvQkgsWUFBWWtCLE1BQU1DLEdBQUdMLGdCQUk3Q1gsa0JBQW9CSCxZQUFZa0IsTUFNeEMsR0FIS1QsU0FDRVcsY0FBZXJCLE9BQVFVLE1BQU9BLE9BQVU5Qix5QkFBeUIwQyxzQkFBc0JDLG1CQUFtQmQsS0FBSyxHQUFHZSxRQUFRLEtBQU0sU0FFbElkLE1BQU8sQ0FDUixNQUFNZSxLQUFPckIsa0JBQWtCcUIsT0FDekJDLE9BQVN0QixrQkFBa0JzQixTQUMzQkMsT0FBU3ZCLGtCQUFrQnVCLFVBRTdCdEIsVUFEQUwsT0FBTzBCLE9BQVNBLFFBQVcxQixPQUFPMEIsU0FBV0EsUUFBVTFCLE9BQU8yQixRQUFVQSxPQUM1REYsS0FHQUEsS0FBTyxJQUVOLEtBQ2JwQixXQUFhLElBRWpCQyxZQUFjTixPQUFPMEIsT0FDckJuQixZQUFjUCxPQUFPMkIsT0FHekIsTUFBTyxDQUFFckQsTUFES1ksK0NBQStDMEMsY0FBY0MsU0FBUyxJQUFJM0MsK0NBQStDNEMsS0FBS3pCLFVBQVdDLFlBQWFDLGNBQWN3QixNQUNsS3JCLE1BQUFBLFFBR3hCckMsUUFBUWMsa0JBQW9CQSIsImZpbGUiOiIvaG9tZS92c3RzL3dvcmsvMS9zL2xpYnJhcmllcy9hZGFwdGl2ZS1leHByZXNzaW9ucy9saWIvYnVpbHRpbkZ1bmN0aW9ucy9nZXROZXh0VmlhYmxlVGltZS5qcyJ9