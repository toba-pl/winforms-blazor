"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const dayjs_1=__importDefault(require(400)),timezone_1=__importDefault(require(402));dayjs_1.default.extend(timezone_1.default);const expressionEvaluator_1=require(180),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),returnType_1=require(213),timeZoneConverter_1=require(214);class ConvertFromUTC extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.ConvertFromUTC,ConvertFromUTC.evaluator,returnType_1.ReturnType.String,ConvertFromUTC.validator)}static evaluator(expression,state,options){let value,locale=options.locale?options.locale:Intl.DateTimeFormat().resolvedOptions().locale,format=ConvertFromUTC.NoneUtcDefaultDateTimeFormat;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options);let error=childrenError;return error||(({format:format,locale:locale}=functionUtils_1.FunctionUtils.determineFormatAndLocale(args,4,format,locale)),"string"==typeof args[0]&&"string"==typeof args[1]?({value:value,error:error}=ConvertFromUTC.evalConvertFromUTC(args[0],args[1],format,locale)):error=`${expression} should contain an ISO format timestamp, an origin time zone string and an optional output format string.`),{value:value,error:error}}static evalConvertFromUTC(timeStamp,destinationTimeZone,format,locale){let result,error;error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(timeStamp);const timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(destinationTimeZone);if(timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)||(error=`${destinationTimeZone} is not a valid timezone`),!error)try{result=dayjs_1.default(timeStamp).locale(locale).tz(timeZone).format(format)}catch(e){error=`${format} is not a valid timestamp format`}return{value:result,error:error}}static validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String,returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.String)}}ConvertFromUTC.NoneUtcDefaultDateTimeFormat="YYYY-MM-DDTHH:mm:ss.SSS0000",exports.ConvertFromUTC=ConvertFromUTC;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnZlcnRGcm9tVVRDLmpzIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsInRoaXMiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGF5anNfMSIsInJlcXVpcmUiLCJ0aW1lem9uZV8xIiwiZXh0ZW5kIiwiZXhwcmVzc2lvbkV2YWx1YXRvcl8xIiwiZXhwcmVzc2lvblR5cGVfMSIsImZ1bmN0aW9uVXRpbHNfMSIsImZ1bmN0aW9uVXRpbHNfaW50ZXJuYWxfMSIsInJldHVyblR5cGVfMSIsInRpbWVab25lQ29udmVydGVyXzEiLCJDb252ZXJ0RnJvbVVUQyIsIkV4cHJlc3Npb25FdmFsdWF0b3IiLCJbb2JqZWN0IE9iamVjdF0iLCJzdXBlciIsIkV4cHJlc3Npb25UeXBlIiwiZXZhbHVhdG9yIiwiUmV0dXJuVHlwZSIsIlN0cmluZyIsInZhbGlkYXRvciIsImV4cHJlc3Npb24iLCJzdGF0ZSIsIm9wdGlvbnMiLCJsb2NhbGUiLCJJbnRsIiwiRGF0ZVRpbWVGb3JtYXQiLCJyZXNvbHZlZE9wdGlvbnMiLCJmb3JtYXQiLCJOb25lVXRjRGVmYXVsdERhdGVUaW1lRm9ybWF0IiwiYXJncyIsImVycm9yIiwiY2hpbGRyZW5FcnJvciIsIkZ1bmN0aW9uVXRpbHMiLCJldmFsdWF0ZUNoaWxkcmVuIiwiZGV0ZXJtaW5lRm9ybWF0QW5kTG9jYWxlIiwiZXZhbENvbnZlcnRGcm9tVVRDIiwidGltZVN0YW1wIiwiZGVzdGluYXRpb25UaW1lWm9uZSIsInJlc3VsdCIsIkludGVybmFsRnVuY3Rpb25VdGlscyIsInZlcmlmeUlTT1RpbWVzdGFtcCIsInRpbWVab25lIiwiVGltZVpvbmVDb252ZXJ0ZXIiLCJ3aW5kb3dzVG9JYW5hIiwidmVyaWZ5VGltZVpvbmVTdHIiLCJ0eiIsImUiLCJ2YWxpZGF0ZU9yZGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxhQVFBLElBQUlBLGdCQUFtQkMsTUFBUUEsS0FBS0QsaUJBQW9CLFNBQVVFLEtBQzlELE9BQVFBLEtBQU9BLElBQUlDLFdBQWNELElBQU0sQ0FBRUUsUUFBV0YsTUFFeERHLE9BQU9DLGVBQWVDLFFBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RELE1BQU1DLFFBQVVULGdCQUFnQlUsUUFBUSxVQUNsQ0MsV0FBYVgsZ0JBQWdCVSxRQUFRLDBCQUMzQ0QsUUFBUUwsUUFBUVEsT0FBT0QsV0FBV1AsU0FDbEMsTUFBTVMsc0JBQXdCSCxRQUFRLDBCQUNoQ0ksaUJBQW1CSixRQUFRLHFCQUMzQkssZ0JBQWtCTCxRQUFRLG9CQUMxQk0seUJBQTJCTixRQUFRLDZCQUNuQ08sYUFBZVAsUUFBUSxpQkFDdkJRLG9CQUFzQlIsUUFBUSx3QkFJcEMsTUFBTVMsdUJBQXVCTixzQkFBc0JPLG9CQUkvQ0MsY0FDSUMsTUFBTVIsaUJBQWlCUyxlQUFlSixlQUFnQkEsZUFBZUssVUFBV1AsYUFBYVEsV0FBV0MsT0FBUVAsZUFBZVEsV0FLbklOLGlCQUFpQk8sV0FBWUMsTUFBT0MsU0FDaEMsSUFBSXRCLE1BQ0F1QixPQUFTRCxRQUFRQyxPQUFTRCxRQUFRQyxPQUFTQyxLQUFLQyxpQkFBaUJDLGtCQUFrQkgsT0FDbkZJLE9BQVNoQixlQUFlaUIsNkJBQzVCLE1BQU1DLEtBQUVBLEtBQU1DLE1BQU9DLGVBQWtCeEIsZ0JBQWdCeUIsY0FBY0MsaUJBQWlCYixXQUFZQyxNQUFPQyxTQUN6RyxJQUFJUSxNQUFRQyxjQVVaLE9BVEtELFVBQ0VILE9BQUFBLE9BQVFKLE9BQUFBLFFBQVdoQixnQkFBZ0J5QixjQUFjRSx5QkFBeUJMLEtBQU0sRUFBR0YsT0FBUUosU0FDdkUsaUJBQVpNLEtBQUssSUFBc0MsaUJBQVpBLEtBQUssS0FDeEM3QixNQUFBQSxNQUFPOEIsTUFBQUEsT0FBVW5CLGVBQWV3QixtQkFBbUJOLEtBQUssR0FBSUEsS0FBSyxHQUFJRixPQUFRSixTQUdoRk8sU0FBV1YsdUhBR1osQ0FBRXBCLE1BQUFBLE1BQU84QixNQUFBQSxPQUtwQmpCLDBCQUEwQnVCLFVBQVdDLG9CQUFxQlYsT0FBUUosUUFDOUQsSUFBSWUsT0FDQVIsTUFDSkEsTUFBUXRCLHlCQUF5QitCLHNCQUFzQkMsbUJBQW1CSixXQUMxRSxNQUFNSyxTQUFXL0Isb0JBQW9CZ0Msa0JBQWtCQyxjQUFjTixxQkFJckUsR0FISzNCLG9CQUFvQmdDLGtCQUFrQkUsa0JBQWtCSCxZQUN6RFgsU0FBV08sZ0RBRVZQLE1BQ0QsSUFDSVEsT0FBU3JDLFFBQVFMLFFBQVF3QyxXQUFXYixPQUFPQSxRQUFRc0IsR0FBR0osVUFBVWQsT0FBT0EsUUFFM0UsTUFBT21CLEdBQ0hoQixTQUFXSCx5Q0FHbkIsTUFBTyxDQUFFM0IsTUFBT3NDLE9BQVFSLE1BQUFBLE9BSzVCakIsaUJBQWlCTyxZQUNiYixnQkFBZ0J5QixjQUFjZSxjQUFjM0IsV0FBWSxDQUFDWCxhQUFhUSxXQUFXQyxPQUFRVCxhQUFhUSxXQUFXQyxRQUFTVCxhQUFhUSxXQUFXQyxPQUFRVCxhQUFhUSxXQUFXQyxTQUcxTFAsZUFBZWlCLDZCQUErQiw4QkFDOUM3QixRQUFRWSxlQUFpQkEiLCJmaWxlIjoiL2hvbWUvdnN0cy93b3JrLzEvcy9saWJyYXJpZXMvYWRhcHRpdmUtZXhwcmVzc2lvbnMvbGliL2J1aWx0aW5GdW5jdGlvbnMvY29udmVydEZyb21VVEMuanMifQ==