"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const expressionEvaluator_1=require(180),expressionType_1=require(192),functionUtils_1=require(196),returnType_1=require(213);class SubArray extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.SubArray,SubArray.evaluator,returnType_1.ReturnType.Array,SubArray.validator)}static evaluator(expression,state,options){let result;const{value:arr,error:childrenError}=expression.children[0].tryEvaluate(state,options);let error=childrenError;if(!error)if(Array.isArray(arr)){let start;const startExpr=expression.children[1];if(({value:start,error:error}=startExpr.tryEvaluate(state,options)),error||Number.isInteger(start)?(start<0||start>arr.length)&&(error=`${startExpr}=${start} which is out of range for ${arr}`):error=`${startExpr} is not an integer.`,!error){let end;if(2===expression.children.length)end=arr.length;else{const endExpr=expression.children[2];({value:end,error:error}=endExpr.tryEvaluate(state,options)),error||Number.isInteger(end)?(end<0||end>arr.length)&&(error=`${endExpr}=${end} which is out of range for ${arr}`):error=`${endExpr} is not an integer`}error||(result=arr.slice(start,end))}}else error=`${expression.children[0]} is not array.`;return{value:result,error:error}}static validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.Number],returnType_1.ReturnType.Array,returnType_1.ReturnType.Number)}}exports.SubArray=SubArray;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1YkFycmF5LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXhwcmVzc2lvbkV2YWx1YXRvcl8xIiwicmVxdWlyZSIsImV4cHJlc3Npb25UeXBlXzEiLCJmdW5jdGlvblV0aWxzXzEiLCJyZXR1cm5UeXBlXzEiLCJTdWJBcnJheSIsIkV4cHJlc3Npb25FdmFsdWF0b3IiLCJbb2JqZWN0IE9iamVjdF0iLCJzdXBlciIsIkV4cHJlc3Npb25UeXBlIiwiZXZhbHVhdG9yIiwiUmV0dXJuVHlwZSIsIkFycmF5IiwidmFsaWRhdG9yIiwiZXhwcmVzc2lvbiIsInN0YXRlIiwib3B0aW9ucyIsInJlc3VsdCIsImFyciIsImVycm9yIiwiY2hpbGRyZW5FcnJvciIsImNoaWxkcmVuIiwidHJ5RXZhbHVhdGUiLCJpc0FycmF5Iiwic3RhcnQiLCJzdGFydEV4cHIiLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJsZW5ndGgiLCJlbmQiLCJlbmRFeHByIiwic2xpY2UiLCJGdW5jdGlvblV0aWxzIiwidmFsaWRhdGVPcmRlciJdLCJtYXBwaW5ncyI6IkFBQUEsYUFRQUEsT0FBT0MsZUFBZUMsUUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdEQsTUFBTUMsc0JBQXdCQyxRQUFRLDBCQUNoQ0MsaUJBQW1CRCxRQUFRLHFCQUMzQkUsZ0JBQWtCRixRQUFRLG9CQUMxQkcsYUFBZUgsUUFBUSxpQkFJN0IsTUFBTUksaUJBQWlCTCxzQkFBc0JNLG9CQUl6Q0MsY0FDSUMsTUFBTU4saUJBQWlCTyxlQUFlSixTQUFVQSxTQUFTSyxVQUFXTixhQUFhTyxXQUFXQyxNQUFPUCxTQUFTUSxXQUtoSE4saUJBQWlCTyxXQUFZQyxNQUFPQyxTQUNoQyxJQUFJQyxPQUNKLE1BQVFsQixNQUFPbUIsSUFBS0MsTUFBT0MsZUFBa0JOLFdBQVdPLFNBQVMsR0FBR0MsWUFBWVAsTUFBT0MsU0FDdkYsSUFBSUcsTUFBUUMsY0FDWixJQUFLRCxNQUNELEdBQUlQLE1BQU1XLFFBQVFMLEtBQU0sQ0FDcEIsSUFBSU0sTUFDSixNQUFNQyxVQUFZWCxXQUFXTyxTQUFTLEdBUXRDLEtBUEd0QixNQUFPeUIsTUFBT0wsTUFBQUEsT0FBVU0sVUFBVUgsWUFBWVAsTUFBT0MsVUFDbkRHLE9BQVVPLE9BQU9DLFVBQVVILFFBR3ZCQSxNQUFRLEdBQUtBLE1BQVFOLElBQUlVLFVBQzlCVCxTQUFXTSxhQUFhRCxtQ0FBbUNOLE9BSDNEQyxTQUFXTSxnQ0FLVk4sTUFBTyxDQUNSLElBQUlVLElBQ0osR0FBbUMsSUFBL0JmLFdBQVdPLFNBQVNPLE9BQ3BCQyxJQUFNWCxJQUFJVSxXQUVULENBQ0QsTUFBTUUsUUFBVWhCLFdBQVdPLFNBQVMsS0FDakN0QixNQUFPOEIsSUFBS1YsTUFBQUEsT0FBVVcsUUFBUVIsWUFBWVAsTUFBT0MsVUFDL0NHLE9BQVVPLE9BQU9DLFVBQVVFLE1BR3ZCQSxJQUFNLEdBQUtBLElBQU1YLElBQUlVLFVBQzFCVCxTQUFXVyxXQUFXRCxpQ0FBaUNYLE9BSHZEQyxTQUFXVyw0QkFNZFgsUUFDREYsT0FBU0MsSUFBSWEsTUFBTVAsTUFBT0ssWUFLbENWLFNBQVdMLFdBQVdPLFNBQVMsbUJBR3ZDLE1BQU8sQ0FBRXRCLE1BQU9rQixPQUFRRSxNQUFBQSxPQUs1QlosaUJBQWlCTyxZQUNiWCxnQkFBZ0I2QixjQUFjQyxjQUFjbkIsV0FBWSxDQUFDVixhQUFhTyxXQUFXZSxRQUFTdEIsYUFBYU8sV0FBV0MsTUFBT1IsYUFBYU8sV0FBV2UsU0FHeko1QixRQUFRTyxTQUFXQSIsImZpbGUiOiIvaG9tZS92c3RzL3dvcmsvMS9zL2xpYnJhcmllcy9hZGFwdGl2ZS1leHByZXNzaW9ucy9saWIvYnVpbHRpbkZ1bmN0aW9ucy9zdWJBcnJheS5qcyJ9