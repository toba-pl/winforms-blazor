"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const expressionEvaluator_1=require(180),returnType_1=require(213),expressionType_1=require(192),functionUtils_1=require(196),functionUtils_internal_1=require(195),timeZoneConverter_1=require(214),dayjs_1=__importDefault(require(400)),timezone_1=__importDefault(require(402));dayjs_1.default.extend(timezone_1.default);const utc_1=__importDefault(require(403));dayjs_1.default.extend(utc_1.default);const recognizers_text_data_types_timex_expression_1=require(222);class GetPreviousViableDate extends expressionEvaluator_1.ExpressionEvaluator{constructor(){super(expressionType_1.ExpressionType.GetPreviousViableDate,GetPreviousViableDate.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString)}static evaluator(expr,state,options){let parsed;const currentTime=dayjs_1.default((new Date).toISOString());let convertedDateTime,validYear=0,validMonth=0,validDay=0;const{args:args,error:childrenError}=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options);let error=childrenError;if(error||({timexProperty:parsed,error:error}=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0])),parsed&&!error&&(!parsed.year&&parsed.month&&parsed.dayOfMonth||(error=`${args[0]} must be a timex string which only contains month and day-of-month, for example: 'XXXX-10-31'.`)),!error)if(2===args.length&&"string"==typeof args[1]){const timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)||(error=`${args[1]} is not a valid timezone`),error||(convertedDateTime=currentTime.utc().tz(timeZone))}else convertedDateTime=currentTime.utc();if(!error){const year=convertedDateTime.year(),month=convertedDateTime.month()+1,dayOfMonth=convertedDateTime.date();if(validYear=parsed.month<month||parsed.month===month&&parsed.dayOfMonth<dayOfMonth?year:year-1,validMonth=parsed.month,validDay=parsed.dayOfMonth,2===validMonth&&29===validDay)for(;!GetPreviousViableDate.leapYear(validYear);)validYear-=1}return{value:recognizers_text_data_types_timex_expression_1.TimexProperty.fromDate(new Date(validYear,validMonth-1,validDay)).timex,error:error}}static leapYear(year){return year%4==0&&year%100!=0||year%400==0}}exports.GetPreviousViableDate=GetPreviousViableDate;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFByZXZpb3VzVmlhYmxlRGF0ZS5qcyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJ0aGlzIiwibW9kIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImV4cHJlc3Npb25FdmFsdWF0b3JfMSIsInJlcXVpcmUiLCJyZXR1cm5UeXBlXzEiLCJleHByZXNzaW9uVHlwZV8xIiwiZnVuY3Rpb25VdGlsc18xIiwiZnVuY3Rpb25VdGlsc19pbnRlcm5hbF8xIiwidGltZVpvbmVDb252ZXJ0ZXJfMSIsImRheWpzXzEiLCJ0aW1lem9uZV8xIiwiZXh0ZW5kIiwidXRjXzEiLCJyZWNvZ25pemVyc190ZXh0X2RhdGFfdHlwZXNfdGltZXhfZXhwcmVzc2lvbl8xIiwiR2V0UHJldmlvdXNWaWFibGVEYXRlIiwiRXhwcmVzc2lvbkV2YWx1YXRvciIsIltvYmplY3QgT2JqZWN0XSIsInN1cGVyIiwiRXhwcmVzc2lvblR5cGUiLCJldmFsdWF0b3IiLCJSZXR1cm5UeXBlIiwiU3RyaW5nIiwiRnVuY3Rpb25VdGlscyIsInZhbGlkYXRlVW5hcnlPckJpbmFyeVN0cmluZyIsImV4cHIiLCJzdGF0ZSIsIm9wdGlvbnMiLCJwYXJzZWQiLCJjdXJyZW50VGltZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNvbnZlcnRlZERhdGVUaW1lIiwidmFsaWRZZWFyIiwidmFsaWRNb250aCIsInZhbGlkRGF5IiwiYXJncyIsImVycm9yIiwiY2hpbGRyZW5FcnJvciIsImV2YWx1YXRlQ2hpbGRyZW4iLCJ0aW1leFByb3BlcnR5IiwiSW50ZXJuYWxGdW5jdGlvblV0aWxzIiwicGFyc2VUaW1leFByb3BlcnR5IiwieWVhciIsIm1vbnRoIiwiZGF5T2ZNb250aCIsImxlbmd0aCIsInRpbWVab25lIiwiVGltZVpvbmVDb252ZXJ0ZXIiLCJ3aW5kb3dzVG9JYW5hIiwidmVyaWZ5VGltZVpvbmVTdHIiLCJ1dGMiLCJ0eiIsImRhdGUiLCJsZWFwWWVhciIsIlRpbWV4UHJvcGVydHkiLCJmcm9tRGF0ZSIsInRpbWV4Il0sIm1hcHBpbmdzIjoiQUFBQSxhQVFBLElBQUlBLGdCQUFtQkMsTUFBUUEsS0FBS0QsaUJBQW9CLFNBQVVFLEtBQzlELE9BQVFBLEtBQU9BLElBQUlDLFdBQWNELElBQU0sQ0FBRUUsUUFBV0YsTUFFeERHLE9BQU9DLGVBQWVDLFFBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RELE1BQU1DLHNCQUF3QkMsUUFBUSwwQkFDaENDLGFBQWVELFFBQVEsaUJBQ3ZCRSxpQkFBbUJGLFFBQVEscUJBQzNCRyxnQkFBa0JILFFBQVEsb0JBQzFCSSx5QkFBMkJKLFFBQVEsNkJBQ25DSyxvQkFBc0JMLFFBQVEsd0JBQzlCTSxRQUFVaEIsZ0JBQWdCVSxRQUFRLFVBQ2xDTyxXQUFhakIsZ0JBQWdCVSxRQUFRLDBCQUMzQ00sUUFBUVosUUFBUWMsT0FBT0QsV0FBV2IsU0FDbEMsTUFBTWUsTUFBUW5CLGdCQUFnQlUsUUFBUSxxQkFDdENNLFFBQVFaLFFBQVFjLE9BQU9DLE1BQU1mLFNBQzdCLE1BQU1nQiwrQ0FBaURWLFFBQVEsMkRBSS9ELE1BQU1XLDhCQUE4Qlosc0JBQXNCYSxvQkFJdERDLGNBQ0lDLE1BQU1aLGlCQUFpQmEsZUFBZUosc0JBQXVCQSxzQkFBc0JLLFVBQVdmLGFBQWFnQixXQUFXQyxPQUFRZixnQkFBZ0JnQixjQUFjQyw2QkFLaEtQLGlCQUFpQlEsS0FBTUMsTUFBT0MsU0FDMUIsSUFBSUMsT0FDSixNQUFNQyxZQUFjbkIsUUFBUVosU0FBUSxJQUFJZ0MsTUFBT0MsZUFDL0MsSUFHSUMsa0JBSEFDLFVBQVksRUFDWkMsV0FBYSxFQUNiQyxTQUFXLEVBRWYsTUFBTUMsS0FBRUEsS0FBTUMsTUFBT0MsZUFBa0IvQixnQkFBZ0JnQixjQUFjZ0IsaUJBQWlCZCxLQUFNQyxNQUFPQyxTQUNuRyxJQUFJVSxNQUFRQyxjQVNaLEdBUktELFNBQ0VHLGNBQWVaLE9BQVFTLE1BQU9BLE9BQVU3Qix5QkFBeUJpQyxzQkFBc0JDLG1CQUFtQk4sS0FBSyxLQUVsSFIsU0FBV1MsU0FDUFQsT0FBT2UsTUFBU2YsT0FBT2dCLE9BQVVoQixPQUFPaUIsYUFDeENSLFNBQVdELEtBQUssc0dBR25CQyxNQUNELEdBQW9CLElBQWhCRCxLQUFLVSxRQUFtQyxpQkFBWlYsS0FBSyxHQUFpQixDQUNsRCxNQUFNVyxTQUFXdEMsb0JBQW9CdUMsa0JBQWtCQyxjQUFjYixLQUFLLElBQ3JFM0Isb0JBQW9CdUMsa0JBQWtCRSxrQkFBa0JILFlBQ3pEVixTQUFXRCxLQUFLLDhCQUVmQyxRQUNETCxrQkFBb0JILFlBQVlzQixNQUFNQyxHQUFHTCxnQkFJN0NmLGtCQUFvQkgsWUFBWXNCLE1BR3hDLElBQUtkLE1BQU8sQ0FDUixNQUFNTSxLQUFPWCxrQkFBa0JXLE9BQ3pCQyxNQUFRWixrQkFBa0JZLFFBQVUsRUFDcENDLFdBQWFiLGtCQUFrQnFCLE9BU3JDLEdBUElwQixVQURBTCxPQUFPZ0IsTUFBUUEsT0FBVWhCLE9BQU9nQixRQUFVQSxPQUFTaEIsT0FBT2lCLFdBQWFBLFdBQzNERixLQUdBQSxLQUFPLEVBRXZCVCxXQUFhTixPQUFPZ0IsTUFDcEJULFNBQVdQLE9BQU9pQixXQUNDLElBQWZYLFlBQWlDLEtBQWJDLFNBQ3BCLE1BQVFwQixzQkFBc0J1QyxTQUFTckIsWUFDbkNBLFdBQWEsRUFLekIsTUFBTyxDQUFFL0IsTUFES1ksK0NBQStDeUMsY0FBY0MsU0FBUyxJQUFJMUIsS0FBS0csVUFBV0MsV0FBYSxFQUFHQyxXQUFXc0IsTUFDbkhwQixNQUFBQSxPQUtwQnBCLGdCQUFnQjBCLE1BQ1osT0FBUUEsS0FBTyxHQUFNLEdBQUtBLEtBQU8sS0FBTyxHQUFNQSxLQUFPLEtBQVEsR0FHckUxQyxRQUFRYyxzQkFBd0JBIiwiZmlsZSI6Ii9ob21lL3ZzdHMvd29yay8xL3MvbGlicmFyaWVzL2FkYXB0aXZlLWV4cHJlc3Npb25zL2xpYi9idWlsdGluRnVuY3Rpb25zL2dldFByZXZpb3VzVmlhYmxlRGF0ZS5qcyJ9