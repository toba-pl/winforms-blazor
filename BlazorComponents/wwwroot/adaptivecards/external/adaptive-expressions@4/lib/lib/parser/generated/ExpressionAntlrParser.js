"use strict";var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const ATN_1=require(281),ATNDeserializer_1=require(285),FailedPredicateException_1=require(258),NoViableAltException_1=require(266),Parser_1=require(267),ParserRuleContext_1=require(269),ParserATNSimulator_1=require(322),RecognitionException_1=require(272),Token_1=require(278),VocabularyImpl_1=require(280),Utils=__importStar(require(367));class ExpressionAntlrParser extends Parser_1.Parser{constructor(input){super(input),this._interp=new ParserATNSimulator_1.ParserATNSimulator(ExpressionAntlrParser._ATN,this)}get vocabulary(){return ExpressionAntlrParser.VOCABULARY}get grammarFileName(){return"ExpressionAntlrParser.g4"}get ruleNames(){return ExpressionAntlrParser.ruleNames}get serializedATN(){return ExpressionAntlrParser._serializedATN}file(){let _localctx=new FileContext(this._ctx,this.state);this.enterRule(_localctx,0,ExpressionAntlrParser.RULE_file);try{this.enterOuterAlt(_localctx,1),this.state=20,this.expression(0),this.state=21,this.match(ExpressionAntlrParser.EOF)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}expression(_p){void 0===_p&&(_p=0);let _la,_parentctx=this._ctx,_parentState=this.state,_localctx=new ExpressionContext(this._ctx,_parentState),_prevctx=_localctx;this.enterRecursionRule(_localctx,2,ExpressionAntlrParser.RULE_expression,_p);try{let _alt;switch(this.enterOuterAlt(_localctx,1),this.state=27,this._errHandler.sync(this),this._input.LA(1)){case ExpressionAntlrParser.PLUS:case ExpressionAntlrParser.SUBSTRACT:case ExpressionAntlrParser.NON:_localctx=new UnaryOpExpContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=24,0!=(-32&(_la=this._input.LA(1)))||0==(1<<_la&(1<<ExpressionAntlrParser.PLUS|1<<ExpressionAntlrParser.SUBSTRACT|1<<ExpressionAntlrParser.NON))?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()),this.state=25,this.expression(12);break;case ExpressionAntlrParser.STRING_INTERPOLATION_START:case ExpressionAntlrParser.OPEN_BRACKET:case ExpressionAntlrParser.OPEN_SQUARE_BRACKET:case ExpressionAntlrParser.OPEN_CURLY_BRACKET:case ExpressionAntlrParser.NUMBER:case ExpressionAntlrParser.IDENTIFIER:case ExpressionAntlrParser.STRING:_localctx=new PrimaryExpContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=26,this.primaryExpression(0);break;default:throw new NoViableAltException_1.NoViableAltException(this)}for(this._ctx._stop=this._input.tryLT(-1),this.state=64,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,2,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;){if(1===_alt)switch(null!=this._parseListeners&&this.triggerExitRuleEvent(),_prevctx=_localctx,this.state=62,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,1,this._ctx)){case 1:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=29,!this.precpred(this._ctx,11))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 11)");this.state=30,this.match(ExpressionAntlrParser.XOR),this.state=31,this.expression(11);break;case 2:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=32,!this.precpred(this._ctx,10))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 10)");this.state=33,0!=(-32&(_la=this._input.LA(1)))||0==(1<<_la&(1<<ExpressionAntlrParser.ASTERISK|1<<ExpressionAntlrParser.SLASH|1<<ExpressionAntlrParser.PERCENT))?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()),this.state=34,this.expression(11);break;case 3:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=35,!this.precpred(this._ctx,9))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 9)");this.state=36,(_la=this._input.LA(1))!==ExpressionAntlrParser.PLUS&&_la!==ExpressionAntlrParser.SUBSTRACT?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()),this.state=37,this.expression(10);break;case 4:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=38,!this.precpred(this._ctx,8))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 8)");this.state=39,(_la=this._input.LA(1))!==ExpressionAntlrParser.DOUBLE_EQUAL&&_la!==ExpressionAntlrParser.NOT_EQUAL?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()),this.state=40,this.expression(9);break;case 5:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=41,!this.precpred(this._ctx,7))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 7)");this.state=42,this.match(ExpressionAntlrParser.SINGLE_AND),this.state=43,this.expression(8);break;case 6:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=44,!this.precpred(this._ctx,6))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 6)");this.state=45,0!=(-32&(_la=this._input.LA(1)))||0==(1<<_la&(1<<ExpressionAntlrParser.LESS_THAN|1<<ExpressionAntlrParser.MORE_THAN|1<<ExpressionAntlrParser.LESS_OR_EQUAl|1<<ExpressionAntlrParser.MORE_OR_EQUAL))?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume()),this.state=46,this.expression(7);break;case 7:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=47,!this.precpred(this._ctx,5))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 5)");this.state=48,this.match(ExpressionAntlrParser.DOUBLE_AND),this.state=49,this.expression(6);break;case 8:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=50,!this.precpred(this._ctx,4))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 4)");this.state=51,this.match(ExpressionAntlrParser.DOUBLE_VERTICAL_CYLINDER),this.state=52,this.expression(5);break;case 9:if(_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=53,!this.precpred(this._ctx,3))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 3)");this.state=54,this.match(ExpressionAntlrParser.NULL_COALESCE),this.state=55,this.expression(4);break;case 10:if(_localctx=new TripleOpExpContext(new ExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,2,ExpressionAntlrParser.RULE_expression),this.state=56,!this.precpred(this._ctx,2))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 2)");this.state=57,this.match(ExpressionAntlrParser.QUESTION_MARK),this.state=58,this.expression(0),this.state=59,this.match(ExpressionAntlrParser.COLON),this.state=60,this.expression(3)}this.state=66,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,2,this._ctx)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.unrollRecursionContexts(_parentctx)}return _localctx}primaryExpression(_p){void 0===_p&&(_p=0);let _la,_parentctx=this._ctx,_parentState=this.state,_localctx=new PrimaryExpressionContext(this._ctx,_parentState),_prevctx=_localctx;this.enterRecursionRule(_localctx,4,ExpressionAntlrParser.RULE_primaryExpression,_p);try{let _alt;switch(this.enterOuterAlt(_localctx,1),this.state=86,this._errHandler.sync(this),this._input.LA(1)){case ExpressionAntlrParser.OPEN_BRACKET:_localctx=new ParenthesisExpContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=68,this.match(ExpressionAntlrParser.OPEN_BRACKET),this.state=69,this.expression(0),this.state=70,this.match(ExpressionAntlrParser.CLOSE_BRACKET);break;case ExpressionAntlrParser.OPEN_SQUARE_BRACKET:_localctx=new ArrayCreationExpContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=72,this.match(ExpressionAntlrParser.OPEN_SQUARE_BRACKET),this.state=74,this._errHandler.sync(this),(0==(-32&(_la=this._input.LA(1)))&&0!=(1<<_la&(1<<ExpressionAntlrParser.STRING_INTERPOLATION_START|1<<ExpressionAntlrParser.PLUS|1<<ExpressionAntlrParser.SUBSTRACT|1<<ExpressionAntlrParser.NON|1<<ExpressionAntlrParser.OPEN_BRACKET|1<<ExpressionAntlrParser.OPEN_SQUARE_BRACKET|1<<ExpressionAntlrParser.OPEN_CURLY_BRACKET|1<<ExpressionAntlrParser.NUMBER))||_la===ExpressionAntlrParser.IDENTIFIER||_la===ExpressionAntlrParser.STRING)&&(this.state=73,this.argsList()),this.state=76,this.match(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET);break;case ExpressionAntlrParser.OPEN_CURLY_BRACKET:_localctx=new JsonCreationExpContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=77,this.match(ExpressionAntlrParser.OPEN_CURLY_BRACKET),this.state=79,this._errHandler.sync(this),(_la=this._input.LA(1))!==ExpressionAntlrParser.IDENTIFIER&&_la!==ExpressionAntlrParser.STRING||(this.state=78,this.keyValuePairList()),this.state=81,this.match(ExpressionAntlrParser.CLOSE_CURLY_BRACKET);break;case ExpressionAntlrParser.NUMBER:_localctx=new NumericAtomContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=82,this.match(ExpressionAntlrParser.NUMBER);break;case ExpressionAntlrParser.STRING:_localctx=new StringAtomContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=83,this.match(ExpressionAntlrParser.STRING);break;case ExpressionAntlrParser.IDENTIFIER:_localctx=new IdAtomContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=84,this.match(ExpressionAntlrParser.IDENTIFIER);break;case ExpressionAntlrParser.STRING_INTERPOLATION_START:_localctx=new StringInterpolationAtomContext(_localctx),this._ctx=_localctx,_prevctx=_localctx,this.state=85,this.stringInterpolation();break;default:throw new NoViableAltException_1.NoViableAltException(this)}for(this._ctx._stop=this._input.tryLT(-1),this.state=107,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,9,this._ctx);2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER;){if(1===_alt)switch(null!=this._parseListeners&&this.triggerExitRuleEvent(),_prevctx=_localctx,this.state=105,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,8,this._ctx)){case 1:if(_localctx=new MemberAccessExpContext(new PrimaryExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,4,ExpressionAntlrParser.RULE_primaryExpression),this.state=88,!this.precpred(this._ctx,3))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 3)");this.state=89,this.match(ExpressionAntlrParser.DOT),this.state=90,this.match(ExpressionAntlrParser.IDENTIFIER);break;case 2:if(_localctx=new FuncInvokeExpContext(new PrimaryExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,4,ExpressionAntlrParser.RULE_primaryExpression),this.state=91,!this.precpred(this._ctx,2))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 2)");this.state=93,this._errHandler.sync(this),(_la=this._input.LA(1))===ExpressionAntlrParser.NON&&(this.state=92,this.match(ExpressionAntlrParser.NON)),this.state=95,this.match(ExpressionAntlrParser.OPEN_BRACKET),this.state=97,this._errHandler.sync(this),(0==(-32&(_la=this._input.LA(1)))&&0!=(1<<_la&(1<<ExpressionAntlrParser.STRING_INTERPOLATION_START|1<<ExpressionAntlrParser.PLUS|1<<ExpressionAntlrParser.SUBSTRACT|1<<ExpressionAntlrParser.NON|1<<ExpressionAntlrParser.OPEN_BRACKET|1<<ExpressionAntlrParser.OPEN_SQUARE_BRACKET|1<<ExpressionAntlrParser.OPEN_CURLY_BRACKET|1<<ExpressionAntlrParser.NUMBER))||_la===ExpressionAntlrParser.IDENTIFIER||_la===ExpressionAntlrParser.STRING)&&(this.state=96,this.argsList()),this.state=99,this.match(ExpressionAntlrParser.CLOSE_BRACKET);break;case 3:if(_localctx=new IndexAccessExpContext(new PrimaryExpressionContext(_parentctx,_parentState)),this.pushNewRecursionContext(_localctx,4,ExpressionAntlrParser.RULE_primaryExpression),this.state=100,!this.precpred(this._ctx,1))throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 1)");this.state=101,this.match(ExpressionAntlrParser.OPEN_SQUARE_BRACKET),this.state=102,this.expression(0),this.state=103,this.match(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET)}this.state=109,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,9,this._ctx)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.unrollRecursionContexts(_parentctx)}return _localctx}stringInterpolation(){let _la,_localctx=new StringInterpolationContext(this._ctx,this.state);this.enterRule(_localctx,6,ExpressionAntlrParser.RULE_stringInterpolation);try{for(this.enterOuterAlt(_localctx,1),this.state=110,this.match(ExpressionAntlrParser.STRING_INTERPOLATION_START),this.state=116,this._errHandler.sync(this),_la=this._input.LA(1);0==(_la-36&-32)&&0!=(1<<_la-36&(1<<ExpressionAntlrParser.TEMPLATE-36|1<<ExpressionAntlrParser.ESCAPE_CHARACTER-36|1<<ExpressionAntlrParser.TEXT_CONTENT-36));){switch(this.state=114,this._errHandler.sync(this),this._input.LA(1)){case ExpressionAntlrParser.ESCAPE_CHARACTER:this.state=111,this.match(ExpressionAntlrParser.ESCAPE_CHARACTER);break;case ExpressionAntlrParser.TEMPLATE:this.state=112,this.match(ExpressionAntlrParser.TEMPLATE);break;case ExpressionAntlrParser.TEXT_CONTENT:this.state=113,this.textContent();break;default:throw new NoViableAltException_1.NoViableAltException(this)}this.state=118,this._errHandler.sync(this),_la=this._input.LA(1)}this.state=119,this.match(ExpressionAntlrParser.STRING_INTERPOLATION_START)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}textContent(){let _localctx=new TextContentContext(this._ctx,this.state);this.enterRule(_localctx,8,ExpressionAntlrParser.RULE_textContent);try{let _alt;this.enterOuterAlt(_localctx,1),this.state=122,this._errHandler.sync(this),_alt=1;do{switch(_alt){case 1:this.state=121,this.match(ExpressionAntlrParser.TEXT_CONTENT);break;default:throw new NoViableAltException_1.NoViableAltException(this)}this.state=124,this._errHandler.sync(this),_alt=this.interpreter.adaptivePredict(this._input,12,this._ctx)}while(2!==_alt&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}argsList(){let _la,_localctx=new ArgsListContext(this._ctx,this.state);this.enterRule(_localctx,10,ExpressionAntlrParser.RULE_argsList);try{switch(this.enterOuterAlt(_localctx,1),this.state=128,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,13,this._ctx)){case 1:this.state=126,this.lambda();break;case 2:this.state=127,this.expression(0)}for(this.state=137,this._errHandler.sync(this),_la=this._input.LA(1);_la===ExpressionAntlrParser.COMMA;){switch(this.state=130,this.match(ExpressionAntlrParser.COMMA),this.state=133,this._errHandler.sync(this),this.interpreter.adaptivePredict(this._input,14,this._ctx)){case 1:this.state=131,this.lambda();break;case 2:this.state=132,this.expression(0)}this.state=139,this._errHandler.sync(this),_la=this._input.LA(1)}}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}lambda(){let _localctx=new LambdaContext(this._ctx,this.state);this.enterRule(_localctx,12,ExpressionAntlrParser.RULE_lambda);try{this.enterOuterAlt(_localctx,1),this.state=140,this.match(ExpressionAntlrParser.IDENTIFIER),this.state=141,this.match(ExpressionAntlrParser.ARROW),this.state=142,this.expression(0)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}keyValuePairList(){let _la,_localctx=new KeyValuePairListContext(this._ctx,this.state);this.enterRule(_localctx,14,ExpressionAntlrParser.RULE_keyValuePairList);try{for(this.enterOuterAlt(_localctx,1),this.state=144,this.keyValuePair(),this.state=149,this._errHandler.sync(this),_la=this._input.LA(1);_la===ExpressionAntlrParser.COMMA;)this.state=145,this.match(ExpressionAntlrParser.COMMA),this.state=146,this.keyValuePair(),this.state=151,this._errHandler.sync(this),_la=this._input.LA(1)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}keyValuePair(){let _localctx=new KeyValuePairContext(this._ctx,this.state);this.enterRule(_localctx,16,ExpressionAntlrParser.RULE_keyValuePair);try{this.enterOuterAlt(_localctx,1),this.state=152,this.key(),this.state=153,this.match(ExpressionAntlrParser.COLON),this.state=154,this.expression(0)}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}key(){let _la,_localctx=new KeyContext(this._ctx,this.state);this.enterRule(_localctx,18,ExpressionAntlrParser.RULE_key);try{this.enterOuterAlt(_localctx,1),this.state=156,(_la=this._input.LA(1))!==ExpressionAntlrParser.IDENTIFIER&&_la!==ExpressionAntlrParser.STRING?this._errHandler.recoverInline(this):(this._input.LA(1)===Token_1.Token.EOF&&(this.matchedEOF=!0),this._errHandler.reportMatch(this),this.consume())}catch(re){if(!(re instanceof RecognitionException_1.RecognitionException))throw re;_localctx.exception=re,this._errHandler.reportError(this,re),this._errHandler.recover(this,re)}finally{this.exitRule()}return _localctx}sempred(_localctx,ruleIndex,predIndex){switch(ruleIndex){case 1:return this.expression_sempred(_localctx,predIndex);case 2:return this.primaryExpression_sempred(_localctx,predIndex)}return!0}expression_sempred(_localctx,predIndex){switch(predIndex){case 0:return this.precpred(this._ctx,11);case 1:return this.precpred(this._ctx,10);case 2:return this.precpred(this._ctx,9);case 3:return this.precpred(this._ctx,8);case 4:return this.precpred(this._ctx,7);case 5:return this.precpred(this._ctx,6);case 6:return this.precpred(this._ctx,5);case 7:return this.precpred(this._ctx,4);case 8:return this.precpred(this._ctx,3);case 9:return this.precpred(this._ctx,2)}return!0}primaryExpression_sempred(_localctx,predIndex){switch(predIndex){case 10:return this.precpred(this._ctx,3);case 11:return this.precpred(this._ctx,2);case 12:return this.precpred(this._ctx,1)}return!0}static get _ATN(){return ExpressionAntlrParser.__ATN||(ExpressionAntlrParser.__ATN=(new ATNDeserializer_1.ATNDeserializer).deserialize(Utils.toCharArray(ExpressionAntlrParser._serializedATN))),ExpressionAntlrParser.__ATN}}ExpressionAntlrParser.STRING_INTERPOLATION_START=1,ExpressionAntlrParser.PLUS=2,ExpressionAntlrParser.SUBSTRACT=3,ExpressionAntlrParser.NON=4,ExpressionAntlrParser.XOR=5,ExpressionAntlrParser.ASTERISK=6,ExpressionAntlrParser.SLASH=7,ExpressionAntlrParser.PERCENT=8,ExpressionAntlrParser.DOUBLE_EQUAL=9,ExpressionAntlrParser.NOT_EQUAL=10,ExpressionAntlrParser.SINGLE_AND=11,ExpressionAntlrParser.DOUBLE_AND=12,ExpressionAntlrParser.DOUBLE_VERTICAL_CYLINDER=13,ExpressionAntlrParser.LESS_THAN=14,ExpressionAntlrParser.MORE_THAN=15,ExpressionAntlrParser.LESS_OR_EQUAl=16,ExpressionAntlrParser.MORE_OR_EQUAL=17,ExpressionAntlrParser.OPEN_BRACKET=18,ExpressionAntlrParser.CLOSE_BRACKET=19,ExpressionAntlrParser.DOT=20,ExpressionAntlrParser.OPEN_SQUARE_BRACKET=21,ExpressionAntlrParser.CLOSE_SQUARE_BRACKET=22,ExpressionAntlrParser.OPEN_CURLY_BRACKET=23,ExpressionAntlrParser.CLOSE_CURLY_BRACKET=24,ExpressionAntlrParser.COMMA=25,ExpressionAntlrParser.COLON=26,ExpressionAntlrParser.ARROW=27,ExpressionAntlrParser.NULL_COALESCE=28,ExpressionAntlrParser.QUESTION_MARK=29,ExpressionAntlrParser.NUMBER=30,ExpressionAntlrParser.WHITESPACE=31,ExpressionAntlrParser.IDENTIFIER=32,ExpressionAntlrParser.NEWLINE=33,ExpressionAntlrParser.STRING=34,ExpressionAntlrParser.INVALID_TOKEN_DEFAULT_MODE=35,ExpressionAntlrParser.TEMPLATE=36,ExpressionAntlrParser.ESCAPE_CHARACTER=37,ExpressionAntlrParser.TEXT_CONTENT=38,ExpressionAntlrParser.RULE_file=0,ExpressionAntlrParser.RULE_expression=1,ExpressionAntlrParser.RULE_primaryExpression=2,ExpressionAntlrParser.RULE_stringInterpolation=3,ExpressionAntlrParser.RULE_textContent=4,ExpressionAntlrParser.RULE_argsList=5,ExpressionAntlrParser.RULE_lambda=6,ExpressionAntlrParser.RULE_keyValuePairList=7,ExpressionAntlrParser.RULE_keyValuePair=8,ExpressionAntlrParser.RULE_key=9,ExpressionAntlrParser.ruleNames=["file","expression","primaryExpression","stringInterpolation","textContent","argsList","lambda","keyValuePairList","keyValuePair","key"],ExpressionAntlrParser._LITERAL_NAMES=[void 0,void 0,"'+'","'-'","'!'","'^'","'*'","'/'","'%'","'=='",void 0,"'&'","'&&'","'||'","'<'","'>'","'<='","'>='","'('","')'","'.'","'['","']'","'{'","'}'","','","':'","'=>'","'??'","'?'"],ExpressionAntlrParser._SYMBOLIC_NAMES=[void 0,"STRING_INTERPOLATION_START","PLUS","SUBSTRACT","NON","XOR","ASTERISK","SLASH","PERCENT","DOUBLE_EQUAL","NOT_EQUAL","SINGLE_AND","DOUBLE_AND","DOUBLE_VERTICAL_CYLINDER","LESS_THAN","MORE_THAN","LESS_OR_EQUAl","MORE_OR_EQUAL","OPEN_BRACKET","CLOSE_BRACKET","DOT","OPEN_SQUARE_BRACKET","CLOSE_SQUARE_BRACKET","OPEN_CURLY_BRACKET","CLOSE_CURLY_BRACKET","COMMA","COLON","ARROW","NULL_COALESCE","QUESTION_MARK","NUMBER","WHITESPACE","IDENTIFIER","NEWLINE","STRING","INVALID_TOKEN_DEFAULT_MODE","TEMPLATE","ESCAPE_CHARACTER","TEXT_CONTENT"],ExpressionAntlrParser.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(ExpressionAntlrParser._LITERAL_NAMES,ExpressionAntlrParser._SYMBOLIC_NAMES,[]),ExpressionAntlrParser._serializedATN='\x03\uc91d\ucaba\u058d\uafba\u4f53\u0607\uea8b\uc241\x03(\xa1\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x05\x03\x1e\n\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03A\n\x03\f\x03\x0e\x03D\v\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x05\x04M\n\x04\x03\x04\x03\x04\x03\x04\x05\x04R\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x05\x04Y\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x05\x04`\n\x04\x03\x04\x03\x04\x05\x04d\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x07\x04l\n\x04\f\x04\x0e\x04o\v\x04\x03\x05\x03\x05\x03\x05\x03\x05\x07\x05u\n\x05\f\x05\x0e\x05x\v\x05\x03\x05\x03\x05\x03\x06\x06\x06}\n\x06\r\x06\x0e\x06~\x03\x07\x03\x07\x05\x07\x83\n\x07\x03\x07\x03\x07\x03\x07\x05\x07\x88\n\x07\x07\x07\x8a\n\x07\f\x07\x0e\x07\x8d\v\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x07\t\x96\n\t\f\t\x0e\t\x99\v\t\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x02\x02\x04\x04\x06\f\x02\x02\x04\x02\x06\x02\b\x02\n\x02\f\x02\x0e\x02\x10\x02\x12\x02\x14\x02\x02\b\x03\x02\x04\x06\x03\x02\b\n\x03\x02\x04\x05\x03\x02\v\f\x03\x02\x10\x13\x04\x02""$$\x02\xb6\x02\x16\x03\x02\x02\x02\x04\x1d\x03\x02\x02\x02\x06X\x03\x02\x02\x02\bp\x03\x02\x02\x02\n|\x03\x02\x02\x02\f\x82\x03\x02\x02\x02\x0e\x8e\x03\x02\x02\x02\x10\x92\x03\x02\x02\x02\x12\x9a\x03\x02\x02\x02\x14\x9e\x03\x02\x02\x02\x16\x17\x05\x04\x03\x02\x17\x18\x07\x02\x02\x03\x18\x03\x03\x02\x02\x02\x19\x1a\b\x03\x01\x02\x1a\x1b\t\x02\x02\x02\x1b\x1e\x05\x04\x03\x0e\x1c\x1e\x05\x06\x04\x02\x1d\x19\x03\x02\x02\x02\x1d\x1c\x03\x02\x02\x02\x1eB\x03\x02\x02\x02\x1f \f\r\x02\x02 !\x07\x07\x02\x02!A\x05\x04\x03\r"#\f\f\x02\x02#$\t\x03\x02\x02$A\x05\x04\x03\r%&\f\v\x02\x02&\'\t\x04\x02\x02\'A\x05\x04\x03\f()\f\n\x02\x02)*\t\x05\x02\x02*A\x05\x04\x03\v+,\f\t\x02\x02,-\x07\r\x02\x02-A\x05\x04\x03\n./\f\b\x02\x02/0\t\x06\x02\x020A\x05\x04\x03\t12\f\x07\x02\x0223\x07\x0e\x02\x023A\x05\x04\x03\b45\f\x06\x02\x0256\x07\x0f\x02\x026A\x05\x04\x03\x0778\f\x05\x02\x0289\x07\x1e\x02\x029A\x05\x04\x03\x06:;\f\x04\x02\x02;<\x07\x1f\x02\x02<=\x05\x04\x03\x02=>\x07\x1c\x02\x02>?\x05\x04\x03\x05?A\x03\x02\x02\x02@\x1f\x03\x02\x02\x02@"\x03\x02\x02\x02@%\x03\x02\x02\x02@(\x03\x02\x02\x02@+\x03\x02\x02\x02@.\x03\x02\x02\x02@1\x03\x02\x02\x02@4\x03\x02\x02\x02@7\x03\x02\x02\x02@:\x03\x02\x02\x02AD\x03\x02\x02\x02B@\x03\x02\x02\x02BC\x03\x02\x02\x02C\x05\x03\x02\x02\x02DB\x03\x02\x02\x02EF\b\x04\x01\x02FG\x07\x14\x02\x02GH\x05\x04\x03\x02HI\x07\x15\x02\x02IY\x03\x02\x02\x02JL\x07\x17\x02\x02KM\x05\f\x07\x02LK\x03\x02\x02\x02LM\x03\x02\x02\x02MN\x03\x02\x02\x02NY\x07\x18\x02\x02OQ\x07\x19\x02\x02PR\x05\x10\t\x02QP\x03\x02\x02\x02QR\x03\x02\x02\x02RS\x03\x02\x02\x02SY\x07\x1a\x02\x02TY\x07 \x02\x02UY\x07$\x02\x02VY\x07"\x02\x02WY\x05\b\x05\x02XE\x03\x02\x02\x02XJ\x03\x02\x02\x02XO\x03\x02\x02\x02XT\x03\x02\x02\x02XU\x03\x02\x02\x02XV\x03\x02\x02\x02XW\x03\x02\x02\x02Ym\x03\x02\x02\x02Z[\f\x05\x02\x02[\\\x07\x16\x02\x02\\l\x07"\x02\x02]_\f\x04\x02\x02^`\x07\x06\x02\x02_^\x03\x02\x02\x02_`\x03\x02\x02\x02`a\x03\x02\x02\x02ac\x07\x14\x02\x02bd\x05\f\x07\x02cb\x03\x02\x02\x02cd\x03\x02\x02\x02de\x03\x02\x02\x02el\x07\x15\x02\x02fg\f\x03\x02\x02gh\x07\x17\x02\x02hi\x05\x04\x03\x02ij\x07\x18\x02\x02jl\x03\x02\x02\x02kZ\x03\x02\x02\x02k]\x03\x02\x02\x02kf\x03\x02\x02\x02lo\x03\x02\x02\x02mk\x03\x02\x02\x02mn\x03\x02\x02\x02n\x07\x03\x02\x02\x02om\x03\x02\x02\x02pv\x07\x03\x02\x02qu\x07\'\x02\x02ru\x07&\x02\x02su\x05\n\x06\x02tq\x03\x02\x02\x02tr\x03\x02\x02\x02ts\x03\x02\x02\x02ux\x03\x02\x02\x02vt\x03\x02\x02\x02vw\x03\x02\x02\x02wy\x03\x02\x02\x02xv\x03\x02\x02\x02yz\x07\x03\x02\x02z\t\x03\x02\x02\x02{}\x07(\x02\x02|{\x03\x02\x02\x02}~\x03\x02\x02\x02~|\x03\x02\x02\x02~\x7f\x03\x02\x02\x02\x7f\v\x03\x02\x02\x02\x80\x83\x05\x0e\b\x02\x81\x83\x05\x04\x03\x02\x82\x80\x03\x02\x02\x02\x82\x81\x03\x02\x02\x02\x83\x8b\x03\x02\x02\x02\x84\x87\x07\x1b\x02\x02\x85\x88\x05\x0e\b\x02\x86\x88\x05\x04\x03\x02\x87\x85\x03\x02\x02\x02\x87\x86\x03\x02\x02\x02\x88\x8a\x03\x02\x02\x02\x89\x84\x03\x02\x02\x02\x8a\x8d\x03\x02\x02\x02\x8b\x89\x03\x02\x02\x02\x8b\x8c\x03\x02\x02\x02\x8c\r\x03\x02\x02\x02\x8d\x8b\x03\x02\x02\x02\x8e\x8f\x07"\x02\x02\x8f\x90\x07\x1d\x02\x02\x90\x91\x05\x04\x03\x02\x91\x0f\x03\x02\x02\x02\x92\x97\x05\x12\n\x02\x93\x94\x07\x1b\x02\x02\x94\x96\x05\x12\n\x02\x95\x93\x03\x02\x02\x02\x96\x99\x03\x02\x02\x02\x97\x95\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x11\x03\x02\x02\x02\x99\x97\x03\x02\x02\x02\x9a\x9b\x05\x14\v\x02\x9b\x9c\x07\x1c\x02\x02\x9c\x9d\x05\x04\x03\x02\x9d\x13\x03\x02\x02\x02\x9e\x9f\t\x07\x02\x02\x9f\x15\x03\x02\x02\x02\x13\x1d@BLQX_ckmtv~\x82\x87\x8b\x97',exports.ExpressionAntlrParser=ExpressionAntlrParser;class FileContext extends ParserRuleContext_1.ParserRuleContext{expression(){return this.getRuleContext(0,ExpressionContext)}EOF(){return this.getToken(ExpressionAntlrParser.EOF,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_file}enterRule(listener){listener.enterFile&&listener.enterFile(this)}exitRule(listener){listener.exitFile&&listener.exitFile(this)}accept(visitor){return visitor.visitFile?visitor.visitFile(this):visitor.visitChildren(this)}}exports.FileContext=FileContext;class ExpressionContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_expression}copyFrom(ctx){super.copyFrom(ctx)}}exports.ExpressionContext=ExpressionContext;class UnaryOpExpContext extends ExpressionContext{expression(){return this.getRuleContext(0,ExpressionContext)}NON(){return this.tryGetToken(ExpressionAntlrParser.NON,0)}SUBSTRACT(){return this.tryGetToken(ExpressionAntlrParser.SUBSTRACT,0)}PLUS(){return this.tryGetToken(ExpressionAntlrParser.PLUS,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterUnaryOpExp&&listener.enterUnaryOpExp(this)}exitRule(listener){listener.exitUnaryOpExp&&listener.exitUnaryOpExp(this)}accept(visitor){return visitor.visitUnaryOpExp?visitor.visitUnaryOpExp(this):visitor.visitChildren(this)}}exports.UnaryOpExpContext=UnaryOpExpContext;class BinaryOpExpContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}XOR(){return this.tryGetToken(ExpressionAntlrParser.XOR,0)}ASTERISK(){return this.tryGetToken(ExpressionAntlrParser.ASTERISK,0)}SLASH(){return this.tryGetToken(ExpressionAntlrParser.SLASH,0)}PERCENT(){return this.tryGetToken(ExpressionAntlrParser.PERCENT,0)}PLUS(){return this.tryGetToken(ExpressionAntlrParser.PLUS,0)}SUBSTRACT(){return this.tryGetToken(ExpressionAntlrParser.SUBSTRACT,0)}DOUBLE_EQUAL(){return this.tryGetToken(ExpressionAntlrParser.DOUBLE_EQUAL,0)}NOT_EQUAL(){return this.tryGetToken(ExpressionAntlrParser.NOT_EQUAL,0)}SINGLE_AND(){return this.tryGetToken(ExpressionAntlrParser.SINGLE_AND,0)}LESS_THAN(){return this.tryGetToken(ExpressionAntlrParser.LESS_THAN,0)}LESS_OR_EQUAl(){return this.tryGetToken(ExpressionAntlrParser.LESS_OR_EQUAl,0)}MORE_THAN(){return this.tryGetToken(ExpressionAntlrParser.MORE_THAN,0)}MORE_OR_EQUAL(){return this.tryGetToken(ExpressionAntlrParser.MORE_OR_EQUAL,0)}DOUBLE_AND(){return this.tryGetToken(ExpressionAntlrParser.DOUBLE_AND,0)}DOUBLE_VERTICAL_CYLINDER(){return this.tryGetToken(ExpressionAntlrParser.DOUBLE_VERTICAL_CYLINDER,0)}NULL_COALESCE(){return this.tryGetToken(ExpressionAntlrParser.NULL_COALESCE,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterBinaryOpExp&&listener.enterBinaryOpExp(this)}exitRule(listener){listener.exitBinaryOpExp&&listener.exitBinaryOpExp(this)}accept(visitor){return visitor.visitBinaryOpExp?visitor.visitBinaryOpExp(this):visitor.visitChildren(this)}}exports.BinaryOpExpContext=BinaryOpExpContext;class TripleOpExpContext extends ExpressionContext{expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}QUESTION_MARK(){return this.getToken(ExpressionAntlrParser.QUESTION_MARK,0)}COLON(){return this.getToken(ExpressionAntlrParser.COLON,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterTripleOpExp&&listener.enterTripleOpExp(this)}exitRule(listener){listener.exitTripleOpExp&&listener.exitTripleOpExp(this)}accept(visitor){return visitor.visitTripleOpExp?visitor.visitTripleOpExp(this):visitor.visitChildren(this)}}exports.TripleOpExpContext=TripleOpExpContext;class PrimaryExpContext extends ExpressionContext{primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterPrimaryExp&&listener.enterPrimaryExp(this)}exitRule(listener){listener.exitPrimaryExp&&listener.exitPrimaryExp(this)}accept(visitor){return visitor.visitPrimaryExp?visitor.visitPrimaryExp(this):visitor.visitChildren(this)}}exports.PrimaryExpContext=PrimaryExpContext;class PrimaryExpressionContext extends ParserRuleContext_1.ParserRuleContext{constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_primaryExpression}copyFrom(ctx){super.copyFrom(ctx)}}exports.PrimaryExpressionContext=PrimaryExpressionContext;class ParenthesisExpContext extends PrimaryExpressionContext{OPEN_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_BRACKET,0)}expression(){return this.getRuleContext(0,ExpressionContext)}CLOSE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_BRACKET,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterParenthesisExp&&listener.enterParenthesisExp(this)}exitRule(listener){listener.exitParenthesisExp&&listener.exitParenthesisExp(this)}accept(visitor){return visitor.visitParenthesisExp?visitor.visitParenthesisExp(this):visitor.visitChildren(this)}}exports.ParenthesisExpContext=ParenthesisExpContext;class ArrayCreationExpContext extends PrimaryExpressionContext{OPEN_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_SQUARE_BRACKET,0)}CLOSE_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET,0)}argsList(){return this.tryGetRuleContext(0,ArgsListContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterArrayCreationExp&&listener.enterArrayCreationExp(this)}exitRule(listener){listener.exitArrayCreationExp&&listener.exitArrayCreationExp(this)}accept(visitor){return visitor.visitArrayCreationExp?visitor.visitArrayCreationExp(this):visitor.visitChildren(this)}}exports.ArrayCreationExpContext=ArrayCreationExpContext;class JsonCreationExpContext extends PrimaryExpressionContext{OPEN_CURLY_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_CURLY_BRACKET,0)}CLOSE_CURLY_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_CURLY_BRACKET,0)}keyValuePairList(){return this.tryGetRuleContext(0,KeyValuePairListContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterJsonCreationExp&&listener.enterJsonCreationExp(this)}exitRule(listener){listener.exitJsonCreationExp&&listener.exitJsonCreationExp(this)}accept(visitor){return visitor.visitJsonCreationExp?visitor.visitJsonCreationExp(this):visitor.visitChildren(this)}}exports.JsonCreationExpContext=JsonCreationExpContext;class NumericAtomContext extends PrimaryExpressionContext{NUMBER(){return this.getToken(ExpressionAntlrParser.NUMBER,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterNumericAtom&&listener.enterNumericAtom(this)}exitRule(listener){listener.exitNumericAtom&&listener.exitNumericAtom(this)}accept(visitor){return visitor.visitNumericAtom?visitor.visitNumericAtom(this):visitor.visitChildren(this)}}exports.NumericAtomContext=NumericAtomContext;class StringAtomContext extends PrimaryExpressionContext{STRING(){return this.getToken(ExpressionAntlrParser.STRING,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterStringAtom&&listener.enterStringAtom(this)}exitRule(listener){listener.exitStringAtom&&listener.exitStringAtom(this)}accept(visitor){return visitor.visitStringAtom?visitor.visitStringAtom(this):visitor.visitChildren(this)}}exports.StringAtomContext=StringAtomContext;class IdAtomContext extends PrimaryExpressionContext{IDENTIFIER(){return this.getToken(ExpressionAntlrParser.IDENTIFIER,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterIdAtom&&listener.enterIdAtom(this)}exitRule(listener){listener.exitIdAtom&&listener.exitIdAtom(this)}accept(visitor){return visitor.visitIdAtom?visitor.visitIdAtom(this):visitor.visitChildren(this)}}exports.IdAtomContext=IdAtomContext;class StringInterpolationAtomContext extends PrimaryExpressionContext{stringInterpolation(){return this.getRuleContext(0,StringInterpolationContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterStringInterpolationAtom&&listener.enterStringInterpolationAtom(this)}exitRule(listener){listener.exitStringInterpolationAtom&&listener.exitStringInterpolationAtom(this)}accept(visitor){return visitor.visitStringInterpolationAtom?visitor.visitStringInterpolationAtom(this):visitor.visitChildren(this)}}exports.StringInterpolationAtomContext=StringInterpolationAtomContext;class MemberAccessExpContext extends PrimaryExpressionContext{primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext)}DOT(){return this.getToken(ExpressionAntlrParser.DOT,0)}IDENTIFIER(){return this.getToken(ExpressionAntlrParser.IDENTIFIER,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterMemberAccessExp&&listener.enterMemberAccessExp(this)}exitRule(listener){listener.exitMemberAccessExp&&listener.exitMemberAccessExp(this)}accept(visitor){return visitor.visitMemberAccessExp?visitor.visitMemberAccessExp(this):visitor.visitChildren(this)}}exports.MemberAccessExpContext=MemberAccessExpContext;class FuncInvokeExpContext extends PrimaryExpressionContext{primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext)}OPEN_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_BRACKET,0)}CLOSE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_BRACKET,0)}NON(){return this.tryGetToken(ExpressionAntlrParser.NON,0)}argsList(){return this.tryGetRuleContext(0,ArgsListContext)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterFuncInvokeExp&&listener.enterFuncInvokeExp(this)}exitRule(listener){listener.exitFuncInvokeExp&&listener.exitFuncInvokeExp(this)}accept(visitor){return visitor.visitFuncInvokeExp?visitor.visitFuncInvokeExp(this):visitor.visitChildren(this)}}exports.FuncInvokeExpContext=FuncInvokeExpContext;class IndexAccessExpContext extends PrimaryExpressionContext{primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext)}OPEN_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_SQUARE_BRACKET,0)}expression(){return this.getRuleContext(0,ExpressionContext)}CLOSE_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET,0)}constructor(ctx){super(ctx.parent,ctx.invokingState),this.copyFrom(ctx)}enterRule(listener){listener.enterIndexAccessExp&&listener.enterIndexAccessExp(this)}exitRule(listener){listener.exitIndexAccessExp&&listener.exitIndexAccessExp(this)}accept(visitor){return visitor.visitIndexAccessExp?visitor.visitIndexAccessExp(this):visitor.visitChildren(this)}}exports.IndexAccessExpContext=IndexAccessExpContext;class StringInterpolationContext extends ParserRuleContext_1.ParserRuleContext{STRING_INTERPOLATION_START(i){return void 0===i?this.getTokens(ExpressionAntlrParser.STRING_INTERPOLATION_START):this.getToken(ExpressionAntlrParser.STRING_INTERPOLATION_START,i)}ESCAPE_CHARACTER(i){return void 0===i?this.getTokens(ExpressionAntlrParser.ESCAPE_CHARACTER):this.getToken(ExpressionAntlrParser.ESCAPE_CHARACTER,i)}TEMPLATE(i){return void 0===i?this.getTokens(ExpressionAntlrParser.TEMPLATE):this.getToken(ExpressionAntlrParser.TEMPLATE,i)}textContent(i){return void 0===i?this.getRuleContexts(TextContentContext):this.getRuleContext(i,TextContentContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_stringInterpolation}enterRule(listener){listener.enterStringInterpolation&&listener.enterStringInterpolation(this)}exitRule(listener){listener.exitStringInterpolation&&listener.exitStringInterpolation(this)}accept(visitor){return visitor.visitStringInterpolation?visitor.visitStringInterpolation(this):visitor.visitChildren(this)}}exports.StringInterpolationContext=StringInterpolationContext;class TextContentContext extends ParserRuleContext_1.ParserRuleContext{TEXT_CONTENT(i){return void 0===i?this.getTokens(ExpressionAntlrParser.TEXT_CONTENT):this.getToken(ExpressionAntlrParser.TEXT_CONTENT,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_textContent}enterRule(listener){listener.enterTextContent&&listener.enterTextContent(this)}exitRule(listener){listener.exitTextContent&&listener.exitTextContent(this)}accept(visitor){return visitor.visitTextContent?visitor.visitTextContent(this):visitor.visitChildren(this)}}exports.TextContentContext=TextContentContext;class ArgsListContext extends ParserRuleContext_1.ParserRuleContext{lambda(i){return void 0===i?this.getRuleContexts(LambdaContext):this.getRuleContext(i,LambdaContext)}expression(i){return void 0===i?this.getRuleContexts(ExpressionContext):this.getRuleContext(i,ExpressionContext)}COMMA(i){return void 0===i?this.getTokens(ExpressionAntlrParser.COMMA):this.getToken(ExpressionAntlrParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_argsList}enterRule(listener){listener.enterArgsList&&listener.enterArgsList(this)}exitRule(listener){listener.exitArgsList&&listener.exitArgsList(this)}accept(visitor){return visitor.visitArgsList?visitor.visitArgsList(this):visitor.visitChildren(this)}}exports.ArgsListContext=ArgsListContext;class LambdaContext extends ParserRuleContext_1.ParserRuleContext{IDENTIFIER(){return this.getToken(ExpressionAntlrParser.IDENTIFIER,0)}ARROW(){return this.getToken(ExpressionAntlrParser.ARROW,0)}expression(){return this.getRuleContext(0,ExpressionContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_lambda}enterRule(listener){listener.enterLambda&&listener.enterLambda(this)}exitRule(listener){listener.exitLambda&&listener.exitLambda(this)}accept(visitor){return visitor.visitLambda?visitor.visitLambda(this):visitor.visitChildren(this)}}exports.LambdaContext=LambdaContext;class KeyValuePairListContext extends ParserRuleContext_1.ParserRuleContext{keyValuePair(i){return void 0===i?this.getRuleContexts(KeyValuePairContext):this.getRuleContext(i,KeyValuePairContext)}COMMA(i){return void 0===i?this.getTokens(ExpressionAntlrParser.COMMA):this.getToken(ExpressionAntlrParser.COMMA,i)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_keyValuePairList}enterRule(listener){listener.enterKeyValuePairList&&listener.enterKeyValuePairList(this)}exitRule(listener){listener.exitKeyValuePairList&&listener.exitKeyValuePairList(this)}accept(visitor){return visitor.visitKeyValuePairList?visitor.visitKeyValuePairList(this):visitor.visitChildren(this)}}exports.KeyValuePairListContext=KeyValuePairListContext;class KeyValuePairContext extends ParserRuleContext_1.ParserRuleContext{key(){return this.getRuleContext(0,KeyContext)}COLON(){return this.getToken(ExpressionAntlrParser.COLON,0)}expression(){return this.getRuleContext(0,ExpressionContext)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_keyValuePair}enterRule(listener){listener.enterKeyValuePair&&listener.enterKeyValuePair(this)}exitRule(listener){listener.exitKeyValuePair&&listener.exitKeyValuePair(this)}accept(visitor){return visitor.visitKeyValuePair?visitor.visitKeyValuePair(this):visitor.visitChildren(this)}}exports.KeyValuePairContext=KeyValuePairContext;class KeyContext extends ParserRuleContext_1.ParserRuleContext{IDENTIFIER(){return this.tryGetToken(ExpressionAntlrParser.IDENTIFIER,0)}STRING(){return this.tryGetToken(ExpressionAntlrParser.STRING,0)}constructor(parent,invokingState){super(parent,invokingState)}get ruleIndex(){return ExpressionAntlrParser.RULE_key}enterRule(listener){listener.enterKey&&listener.enterKey(this)}exitRule(listener){listener.exitKey&&listener.exitKey(this)}accept(visitor){return visitor.visitKey?visitor.visitKey(this):visitor.visitChildren(this)}}exports.KeyContext=KeyContext;

//# sourceMappingURL=data:application/json;base64,